{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/favicon.png","path":"favicon.png","modified":1,"renderable":0},{"_id":"source/js/test.ts","path":"js/test.ts","modified":1,"renderable":0},{"_id":"source/images/new_repository.png","path":"images/new_repository.png","modified":1,"renderable":0},{"_id":"source/images/wx_code.jpg","path":"images/wx_code.jpg","modified":1,"renderable":0},{"_id":"source/images/setting.png","path":"images/setting.png","modified":1,"renderable":0},{"_id":"source/images/三次握手.webp","path":"images/三次握手.webp","modified":1,"renderable":0},{"_id":"source/images/四次挥手.webp","path":"images/四次挥手.webp","modified":1,"renderable":0},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"f101067dbc5a4eff76e49fbe494ade005b9550a5","modified":1673667480835},{"_id":"source/favicon.png","hash":"6814edd490b7e2f63e908783da5ca35fc22e5d48","modified":1673667480838},{"_id":"source/404/index.md","hash":"f593ea5da324988ed064d36d677819569ab3e36e","modified":1673667480835},{"_id":"source/_posts/axios取消请求.md","hash":"bb9738dd76de179121fc5eb9d9a41de40fb43d68","modified":1673675556824},{"_id":"source/_posts/hello-world.md","hash":"c7ce01f5a87512fb34c576d8739b7b4560817481","modified":1673668682562},{"_id":"source/_posts/怎么结合Hexo在GitHub搭建自己的博客网站.md","hash":"f7a3ebece25f8aa1ec7c3318c97c9e238808b680","modified":1673667480835},{"_id":"source/_posts/手写Promise雏形.md","hash":"d983aafce2fee4f16ee36e7228eedf526d29c1e3","modified":1673668609576},{"_id":"source/_posts/数组扁平化.md","hash":"bf88a78a65adde88c633fd1774f1845eda2f7d03","modified":1673668667761},{"_id":"source/_posts/文本下载.md","hash":"ad26d198af72c7fb160b7d59ec674fd3ffcdc129","modified":1673668674653},{"_id":"source/_posts/输入URL到页面展示过程.md","hash":"b5bb7bab5625b134594c2661adcb49fa5ef25930","modified":1673668661050},{"_id":"source/_posts/解决React函数式闭包问题.md","hash":"5a472377e8a7279bd61f69c5c849acd6e6ce232c","modified":1673667480836},{"_id":"source/_posts/黄豆焖猪蹄.md","hash":"a5a24e350164b6f878a346f32f58d94899bfa646","modified":1673667480837},{"_id":"source/about/index.md","hash":"a88013a0c30d740750c88803d11af2b8c8926fa6","modified":1673667480837},{"_id":"source/js/test.ts","hash":"331db4520e5e6abea9c199bd7c4348520ed0ebf7","modified":1673667480841},{"_id":"source/images/new_repository.png","hash":"6fcf83ad7f21a76d800bbb59445e29b2254e381f","modified":1673667480838},{"_id":"source/images/wx_code.jpg","hash":"9e2c3e0f50b48f8d0c17b71786fd3cf441af9bd5","modified":1673667480840},{"_id":"source/images/三次握手.webp","hash":"ceb863c72c0738c6cfd3bc589839d8db3930419c","modified":1673667480840},{"_id":"source/images/四次挥手.webp","hash":"b845a1d62c9d6221339eb8e9c6cc1ec6b145d5ff","modified":1673667480840},{"_id":"source/tags/index.md","hash":"9be75c2cc23b070f1a48031bcb64e4054f14fd3f","modified":1673667480841},{"_id":"source/images/setting.png","hash":"6f118bdd34f368eb83466a319548de9e6dcdeb80","modified":1673667480839},{"_id":"themes/next/.editorconfig","hash":"731c650ddad6eb0fc7c3d4a91cad1698fe7ad311","modified":1673667480879},{"_id":"themes/next/.eslintrc.json","hash":"d3c11de434171d55d70daadd3914bc33544b74b8","modified":1673667480879},{"_id":"themes/next/.gitattributes","hash":"3e00e1fb043438cd820d94ee3dc9ffb6718996f3","modified":1673667480879},{"_id":"themes/next/.gitignore","hash":"83418530da80e6a78501e1d62a89c3bf5cbaec3d","modified":1673667480883},{"_id":"themes/next/.stylintrc","hash":"6259e2a0b65d46865ab89564b88fc67638668295","modified":1673667480883},{"_id":"themes/next/.travis.yml","hash":"379f31a140ce41e441442add6f673bf397d863ea","modified":1673667480885},{"_id":"themes/next/LICENSE.md","hash":"0a9c7399f102b4eb0a6950dd31264be421557c7d","modified":1673667480885},{"_id":"themes/next/README.md","hash":"7d56751b580d042559b2acf904fca4b42bcb30a7","modified":1673667480885},{"_id":"themes/next/_config.yml","hash":"cbe9fedcdcf6da12abab33b005cf31b9a99701ca","modified":1673667480886},{"_id":"themes/next/crowdin.yml","hash":"4a53f5985e545c635cb56b2a57ed290cb8cf8942","modified":1673667480886},{"_id":"themes/next/gulpfile.js","hash":"0c76a1ac610ee8cbe8e2cc9cca1c925ffd0edf98","modified":1673667480892},{"_id":"themes/next/package.json","hash":"b099e7cea4406e209130410d13de87988ba37b2a","modified":1673667480921},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"778b7e052993ed59f21ed266ba7119ee2e5253fb","modified":1673667480879},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ddde54fb50d11dc08cec899a3588addb56aa386","modified":1673667480880},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"d2f8e6b65783e31787feb05d2ccea86151f53f35","modified":1673667480881},{"_id":"themes/next/.github/config.yml","hash":"df3d970700e6b409edc3d23be8d553db78d5ba3f","modified":1673667480881},{"_id":"themes/next/.github/issue-close-app.yml","hash":"b14756e65546eb9ecc9d4393f0c9a84a3dac1824","modified":1673667480881},{"_id":"themes/next/.github/lock.yml","hash":"3ce3d0a26030a1cd52b273cc6a6d444d7c8d85c2","modified":1673667480882},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"533fbe6b2f87d7e7ec6949063bb7ea7eb4fbe52d","modified":1673667480881},{"_id":"themes/next/.github/mergeable.yml","hash":"1c1cb77a62df1e3654b151c2da34b4a10d351170","modified":1673667480882},{"_id":"themes/next/.github/stale.yml","hash":"590b65aca710e0fba75d3cf5361a64d13b6b0f63","modified":1673667480882},{"_id":"themes/next/.github/release-drafter.yml","hash":"09c3352b2d643acdc6839601ceb38abc38ab97c5","modified":1673667480882},{"_id":"themes/next/.github/support.yml","hash":"7ce2722d6904c31a086444c422dc49b6aa310651","modified":1673667480882},{"_id":"themes/next/docs/AGPL3.md","hash":"f463f95b169d64983f59fa6f3e4b6760290a0e6b","modified":1673667480886},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"60c7e9ef0c578deebad43e9395c958fa61096baf","modified":1673667480887},{"_id":"themes/next/docs/AUTHORS.md","hash":"cde7cc095ac31b421a573042cf61060f90d9ad0d","modified":1673667480887},{"_id":"themes/next/docs/DATA-FILES.md","hash":"980fb8d37701f7fd96b30bb911519de3bbb473d1","modified":1673667480887},{"_id":"themes/next/docs/INSTALLATION.md","hash":"07ea00bee149a1bdc9073e903ee6b411e9f2f818","modified":1673667480887},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"6cc663db5e99fd86bb993c10d446ad26ada88e58","modified":1673667480888},{"_id":"themes/next/docs/LICENSE.txt","hash":"ae5ad07e4f4106bad55535dba042221539e6c7f9","modified":1673667480888},{"_id":"themes/next/docs/MATH.md","hash":"f56946053ade0915ff7efa74d43c38b8dd9e63bb","modified":1673667480888},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"1e86d32063b490d204baa9d45d8d3cb22c24a37d","modified":1673667480888},{"_id":"themes/next/languages/ar.yml","hash":"abcf220bd615cec0dd50e4d98da56580169d77e1","modified":1673667480892},{"_id":"themes/next/languages/de.yml","hash":"15078b7ede1b084e8a6a15d271f0db9c325bd698","modified":1673667480892},{"_id":"themes/next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1673667480893},{"_id":"themes/next/languages/en.yml","hash":"dbb64776f9c001c54d0058256c415a9a0724ed5d","modified":1673667480893},{"_id":"themes/next/languages/fa.yml","hash":"6c0a7d5bcc26eb45a9f3e02f13117c668e77fffd","modified":1673667480895},{"_id":"themes/next/languages/es.yml","hash":"f064c793d56a5e0f20cda93b6f0e355044efc7d8","modified":1673667480893},{"_id":"themes/next/languages/fr.yml","hash":"3e2f89d4bb4441d33ecc7b5a4ee114f627603391","modified":1673667480895},{"_id":"themes/next/languages/hu.yml","hash":"0ea89ffaefd02a10494995f05a2a59d5e5679a28","modified":1673667480895},{"_id":"themes/next/languages/id.yml","hash":"7599bb0ecf278beb8fde3d17bfc148a3241aef82","modified":1673667480895},{"_id":"themes/next/languages/it.yml","hash":"46222f468e66789e9ba13095809eb5e5b63edf30","modified":1673667480896},{"_id":"themes/next/languages/ja.yml","hash":"bf279d0eb1911806d01a12f27261fbc76a3bb3f9","modified":1673667480896},{"_id":"themes/next/languages/ko.yml","hash":"af4be6cb394abd4e2e9a728418897d2ed4cc5315","modified":1673667480896},{"_id":"themes/next/languages/nl.yml","hash":"9749cf90b250e631dd550a4f32ada3bb20f66dd0","modified":1673667480896},{"_id":"themes/next/languages/pt-BR.yml","hash":"69aa3bef5710b61dc9a0f3b3a8f52f88c4d08c00","modified":1673667480897},{"_id":"themes/next/languages/pt.yml","hash":"f6606dd0b916a465c233f24bd9a70adce34dc8d6","modified":1673667480897},{"_id":"themes/next/languages/ru.yml","hash":"012abc694cf9de281a0610f95f79c594f0a16562","modified":1673667480897},{"_id":"themes/next/languages/tr.yml","hash":"c4e9ab7e047ae13a19f147c6bec163c3ba2c6898","modified":1673667480897},{"_id":"themes/next/languages/uk.yml","hash":"69ef00b1b8225920fcefff6a6b6f2f3aad00b4ce","modified":1673667480897},{"_id":"themes/next/languages/vi.yml","hash":"6a578cc28773bd764f4418110500478f185d6efa","modified":1673667480898},{"_id":"themes/next/languages/zh-CN.yml","hash":"81d73e21402dad729053a3041390435f43136a68","modified":1673667480898},{"_id":"themes/next/languages/zh-HK.yml","hash":"92ccee40c234626bf0142152949811ebe39fcef2","modified":1673667480898},{"_id":"themes/next/languages/zh-TW.yml","hash":"cf0740648725983fb88409d6501876f8b79db41d","modified":1673667480898},{"_id":"themes/next/layout/_layout.swig","hash":"9554bd0f5c5a0438aa7b64065be5561c374d260e","modified":1673667480899},{"_id":"themes/next/layout/archive.swig","hash":"d9bca77f6dcfef71e300a294f731bead11ce199f","modified":1673667480920},{"_id":"themes/next/layout/category.swig","hash":"c546b017a956faaa5f5643c7c8a363af7ac9d6b9","modified":1673667480920},{"_id":"themes/next/layout/index.swig","hash":"8dfd96fb6f833dd5d037de800813105654e8e8e6","modified":1673667480920},{"_id":"themes/next/layout/post.swig","hash":"5f0b5ba2e0a5b763be5e7e96611865e33bba24d7","modified":1673667480921},{"_id":"themes/next/layout/page.swig","hash":"357d916694d4c9a0fd1140fa56d3d17e067d8b52","modified":1673667480921},{"_id":"themes/next/layout/tag.swig","hash":"d44ff8755727f6532e86fc9fc8dc631200ffe161","modified":1673667480921},{"_id":"themes/next/scripts/renderer.js","hash":"e3658eea97b1183ee2e9f676231e53f7994741f6","modified":1673667480927},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"e67146befddec3a0dc47dc80d1109070c71d5d04","modified":1673667480880},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"6beeca0f45a429cd932b6e648617f548ff64c27c","modified":1673667480880},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"d5aa1a3323639a36bcd9a401484b67537043cd3c","modified":1673667480880},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"59275aa0582f793fee7be67904dcf52ad33a7181","modified":1673667480880},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"54e6a067ed95268eab6be2ba040a7e9b1907928e","modified":1673667480889},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"a9cfe5ac9ef727a8650b2b6584482751a26b1460","modified":1673667480889},{"_id":"themes/next/docs/ru/README.md","hash":"1e5ddb26ad6f931f8c06ce2120f257ff38b74fdf","modified":1673667480889},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"cb8e39c377fc4a14aaf133b4d1338a48560e9e65","modified":1673667480889},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"3202be9a8d31986caac640e7a4c7ce22e99917eb","modified":1673667480890},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"7e6f227f2aaf30f400d4c065650a4e3d0d61b9e1","modified":1673667480890},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"611f2930c2b281b80543531b1bf33d082531456a","modified":1673667480890},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"2d868cd271d78b08775e28c5b976de8836da4455","modified":1673667480890},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"716111dd36d276f463c707dfcc9937fea2a1cf7a","modified":1673667480891},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"50ab381c27611d5bf97bb3907b5ca9998f28187d","modified":1673667480891},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"0d46f9f50cf2e4183970adce705d1041155b0d37","modified":1673667480891},{"_id":"themes/next/docs/zh-CN/README.md","hash":"8f7c0d0b766024152591d4ccfac715c8e18b37f3","modified":1673667480891},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"b3201934b966bc731eaf8a4dad4ba4bdcd300c10","modified":1673667480892},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"30ade8c806d7826cc50a4a3e46a9e6213fddf333","modified":1673667480899},{"_id":"themes/next/layout/_macro/post.swig","hash":"90d36a5c28229ed383c8a6343b6f8aa2c0badac2","modified":1673667480899},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"5bffdb1448caca7db7b1f84e1693e6657a106d50","modified":1673667480900},{"_id":"themes/next/layout/_scripts/index.swig","hash":"3fc83378290cb00d241f5995a8f779e11a8ef45f","modified":1673667480907},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"7b9e0f776a5be6c3f95bc7f394e1424ba02ba93b","modified":1673667480908},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"ccff5a773644d33ff22f6b45b6734f52b048f22b","modified":1673667480908},{"_id":"themes/next/layout/_scripts/three.swig","hash":"6b092c6d882b2dfa5273e1b3f60b244cb7c29fcd","modified":1673667480909},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"244ca2d74ee0d497c87572c6a26b43c62a952673","modified":1673667480910},{"_id":"themes/next/layout/_partials/comments.swig","hash":"142efb4c6b73d8f736f6784804b40d5871333172","modified":1673667480900},{"_id":"themes/next/layout/_partials/footer.swig","hash":"e031914c98f082d918ece4c35fdd0a5be1c4e845","modified":1673667480900},{"_id":"themes/next/layout/_partials/languages.swig","hash":"c3ea82604a5853fb44c5f4e4663cbe912aa5dcf8","modified":1673667480902},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"2de77d533c91532a8a4052000244d0c1693370df","modified":1673667480904},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"5392dcbb504266f0f61d5b8219914068ef9cdc25","modified":1673667480907},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"28b0a7e843ec4365db1963646659a153753cd746","modified":1673667480911},{"_id":"themes/next/layout/_third-party/index.swig","hash":"c6b63cbc80938e6e09578b8c67e01adf13a9e3bd","modified":1673667480914},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"5ae5adcd6f63ed98b2071e4f7e5e38c4d7d24e1b","modified":1673667480917},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"269102fc5e46bd1ce75abdcce161f0570ae70e2f","modified":1673667480918},{"_id":"themes/next/scripts/events/index.js","hash":"5c355f10fe8c948a7f7cd28bd8120adb7595ebde","modified":1673667480922},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"ad321db012cea520066deb0639335e9bc0dcc343","modified":1673667480925},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"305d03c1e45782988809298c3e3b3c5d5ee438aa","modified":1673667480925},{"_id":"themes/next/scripts/filters/locals.js","hash":"a5e7d05d3bd2ae6dcffad5a8ea0f72c6e55dbd02","modified":1673667480925},{"_id":"themes/next/scripts/filters/minify.js","hash":"21196a48cb127bf476ce598f25f24e8a53ef50c2","modified":1673667480925},{"_id":"themes/next/scripts/filters/post.js","hash":"57f2d817578dd97e206942604365e936a49854de","modified":1673667480925},{"_id":"themes/next/scripts/helpers/engine.js","hash":"eb6b8bbc1dce4846cd5e0fac0452dbff56d07b5d","modified":1673667480926},{"_id":"themes/next/scripts/helpers/font.js","hash":"8fb1c0fc745df28e20b96222974402aab6d13a79","modified":1673667480926},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"b8d7ddfa4baa9b8d6b9066a634aa81c6243beec9","modified":1673667480926},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"4044129368d0e2811859a9661cad8ab47118bc32","modified":1673667480926},{"_id":"themes/next/scripts/tags/button.js","hash":"bb0e8abbc0a6d5b3a1a75a23976f2ac3075aab31","modified":1673667480927},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"840536754121e0da5968f5ad235f29200fc5d769","modified":1673667480927},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"e2d0184bc4a557e1017395b80ff46880078d8537","modified":1673667480927},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"93ccd3f99d3cb42674f29183c756df63acb5d7f8","modified":1673667480927},{"_id":"themes/next/scripts/tags/label.js","hash":"fc83f4e1be2c34e81cb79938f4f99973eba1ea60","modified":1673667480928},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"81134494ff0134c0dae1b3815caf6606fccd4e46","modified":1673667480928},{"_id":"themes/next/scripts/tags/note.js","hash":"1fdf4f95810fdb983bfd5ad4c4f13fedd4ea2f8d","modified":1673667480928},{"_id":"themes/next/scripts/tags/pdf.js","hash":"37b53661ad00a01a2ca7d2e4a5ad3a926073f8e2","modified":1673667480928},{"_id":"themes/next/scripts/tags/tabs.js","hash":"c70a4a66fd0c28c98ccb6c5d5f398972e5574d28","modified":1673667480929},{"_id":"themes/next/scripts/tags/video.js","hash":"944293fec96e568d9b09bc1280d5dbc9ee1bbd17","modified":1673667480929},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1673667480956},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1673667480956},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1673667480958},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1673667480958},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1673667480958},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1673667480958},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1673667480959},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1673667480959},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1673667480959},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1673667480959},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1673667480960},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1673667480960},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1673667480960},{"_id":"themes/next/source/css/_colors.styl","hash":"11aef31a8e76f0f332a274a8bfd4537b73d4f88f","modified":1673667480929},{"_id":"themes/next/source/css/_mixins.styl","hash":"072a3fa473c19b20ccd7536a656cda044dbdae0a","modified":1673667480951},{"_id":"themes/next/source/css/main.styl","hash":"815ef30987d02f3d76dbe4b5ee3a72135a152678","modified":1673667480956},{"_id":"themes/next/source/js/algolia-search.js","hash":"6a813410e33824d7acc65a369a2983912bb3420c","modified":1673667480962},{"_id":"themes/next/source/js/bookmark.js","hash":"9f05fd3672789311dc0cf5b37e40dc654cb04a2a","modified":1673667480962},{"_id":"themes/next/source/js/local-search.js","hash":"67177d0e1b04712458dc77851882dbc4efa97393","modified":1673667480962},{"_id":"themes/next/source/js/motion.js","hash":"d5aa1a08cdf3c8d1d8d550fb1801274cc41e5874","modified":1673667480962},{"_id":"themes/next/source/js/next-boot.js","hash":"250d8dcd6322e69e3fbadd0f3e37081c97b47c52","modified":1673667480963},{"_id":"themes/next/source/js/utils.js","hash":"26a82e46fdcadc7c3c2c56a7267284b61a26f7f3","modified":1673667480964},{"_id":"themes/next/source/lib/anime.min.js","hash":"960be51132134acd65c2017cc8a5d69cb419a0cd","modified":1673667480964},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"34c05e9d73b0f081db70990c296b6d6a0f8ea2ca","modified":1673667480908},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"34495d408e8467555afee489500b8aad98c52079","modified":1673667480909},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"0b44f400ec00d2b5add5ee96c11d22465c432376","modified":1673667480909},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"0b44f400ec00d2b5add5ee96c11d22465c432376","modified":1673667480909},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"34495d408e8467555afee489500b8aad98c52079","modified":1673667480909},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"7d638e413f2548fc990c4a467dd03de6c81fc960","modified":1673667480900},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"90cce9f407e9490756ba99580e3eb09f55b05eaa","modified":1673667480901},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"91056a6c98cca63ff8cc6956e531ee3faf4b8ad9","modified":1673667480901},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"0dd316f153c492c0a03bd0273d50fa322bc81f11","modified":1673667480901},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"4baa86ca631168fc6388d27f4b1b501b40c877a8","modified":1673667480901},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"90d3eaba6fbe69bee465ddd67c467fd2c0239dc4","modified":1673667480902},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"bed6cc2b48cf2655036ba39c9bae73a295228a4d","modified":1673667480902},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"91c0addb33006619faa4c32e5d66874e25f1e9b3","modified":1673667480903},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"8d4e3dd0d3631ce0b21bc15c259f6ac886de631d","modified":1673667480903},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"f2eb455c8bf13533427254f0c9b4b17b2498168b","modified":1673667480905},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"d8f785c062c6b0763a778bd4a252e6f5fee0e432","modified":1673667480905},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"ce712c110b5ce8aacba7a86b0558ff89700675c9","modified":1673667480905},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"bc7b047a6246df07767373644b1637d91c3a88b1","modified":1673667480905},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"f349a226e5370075bb6924e60da8b0170c7cfcc1","modified":1673667480906},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"98fd1f5df044f4534e1d4ca9ab092ba5761739a9","modified":1673667480906},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"a6c761d5193cb6f22e9422dbbcf209e05471b0ed","modified":1673667480906},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"128f7d679bb4d53b29203d598d217f029a66dee7","modified":1673667480906},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"7b2ef5db9615267a24b884388925de1e9b447c1f","modified":1673667480907},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"84adaadd83ce447fa9da2cff19006334c9fcbff9","modified":1673667480910},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b8819bd056f8a580c5556d4415836a906ed5d7a4","modified":1673667480910},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"91c2cb900c76224c5814eeb842d1d5f517f9bf05","modified":1673667480911},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"85b60e222712ca3b2c4dc2039de2dc36b8d82940","modified":1673667480911},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"2642e8aef5afbe23a2a76efdc955dab2ee04ed48","modified":1673667480911},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"fb94ee487d75e484e59b7fba96e989f699ff8a83","modified":1673667480911},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"9298e6d6c4a62a0862fc0f4060ed99779d7b68cb","modified":1673667480912},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"1b29b99fa921f12c25d3dc95facdf84ef7bb1b5c","modified":1673667480912},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"a42f97eda3748583bac2253c47fe5dfa54f07b8f","modified":1673667480912},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"3d91899ca079e84d95087b882526d291e6f53918","modified":1673667480914},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"2e998bb48e1b4457fa410f28480dc7196b5e20a9","modified":1673667480914},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"606ad14a29320157df9b8f33738282c51bb393d9","modified":1673667480914},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"59df21fcfe9d0ada8cee3188cb1075529c1c3eb8","modified":1673667480915},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"276f523e414d4aa7f350a8f2fd3df8a3d8ea9656","modified":1673667480915},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"1f34b2d3c753a3589ab6c462880bd4eb7df09914","modified":1673667480915},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"fd726aad77a57b288f07d6998ec29291c67c7cbb","modified":1673667480918},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"58296a5c1883f26464c2a5ccf734c19f5fbf395a","modified":1673667480918},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"aa6ab95b8b76611694613defb4bf25003d1b927f","modified":1673667480918},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"d2f0e4c598410ec33785abe302c7ea7492bb791a","modified":1673667480918},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"53a0760c75d5aaabb3ce8e8aa8e003510d59807f","modified":1673667480919},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"01d94354d07e72cad47100482068b6be69fcc033","modified":1673667480919},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"964cd6bac668cf6d211a2624fbef3948cfdece55","modified":1673667480919},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"c171ea94e9afbba97f06856904264da331559463","modified":1673667480919},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"619338ddacf01e3df812e66a997e778f672f4726","modified":1673667480920},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"5a223b60406cee7438cfe3a5e41d1284425aa7a5","modified":1673667480920},{"_id":"themes/next/scripts/events/lib/config.js","hash":"aefe3b38a22bc155d485e39187f23e4f2ee5680a","modified":1673667480922},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"e73f697bb160b223fdde783237148be5f41c1d78","modified":1673667480922},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"08496b71c9939718e7955704d219e44d7109247b","modified":1673667480922},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"713056d33dbcd8e9748205c5680b456c21174f4e","modified":1673667480923},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"2f22f48f7370470cef78561a47c2a47c78035385","modified":1673667480923},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"0c3bea89d64bc12c1bbe6f208a83773c6fb5375a","modified":1673667480923},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"3a80559df0b670ccb065ea9d3bb587d0b61be3a4","modified":1673667480923},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"67cf90d9a2428c14eb113a64bdd213c22a019aef","modified":1673667480924},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"323a47df6ded894944a2647db44556d6163e67c4","modified":1673667480924},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"a4f3153ac76a7ffdf6cc70f52f1b2cc218ed393e","modified":1673667480924},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"851359f5ff90f733a9bd7fe677edbee8b8ac714c","modified":1673667480924},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"583ff1e7a2ca889f1f54eb0ca793894466823c7c","modified":1673667480955},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"5980abbbbeacd8541121f436fa414d24ad5e97c2","modified":1673667480955},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"c22b58af3327236ec54d5706501aa5a20e15012e","modified":1673667480955},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"4e33774b1fe6d0a51f3a428c54c5e600e83bf154","modified":1673667480955},{"_id":"themes/next/source/css/_variables/base.styl","hash":"7012b9bb122f98e9b6f4b4cdd88833c406009b6c","modified":1673667480956},{"_id":"themes/next/source/js/schemes/muse.js","hash":"a18559a9c332199efad0100cf84bb0c23fc0f17a","modified":1673667480963},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"b85a6e2af1387fe64b51e7cd3e2da8616e6f5a3f","modified":1673667480963},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1673667480967},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1673667480968},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"510a6f0ba7485dd54ce347cca890ab52c4957081","modified":1673667480930},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"0534b329d279a6f255112b3305ff92c810f31724","modified":1673667480930},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"d17236df3b4d6def1e4e81133ef4729c390de3ac","modified":1673667480930},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"c52648a7b09f9fe37858f5694fcc1ffc709ad147","modified":1673667480938},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"a2ee16cac29a82cfce26804c160286fcbee94161","modified":1673667480941},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"7a95c27762e1303bf06ee808c63f616cb192fcaf","modified":1673667480941},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"89bb0d4e7b2d631efc2e755a2702bee38abb7c7a","modified":1673667480945},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"45f4badac6ec45cf24355f6157aece1d4d3f1134","modified":1673667480945},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"4b068d0d898f4e624937503f0e1428993050bd65","modified":1673667480945},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"6d740699fb6a7640647a8fd77c4ea4992d8d6437","modified":1673667480948},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"b619f39e18398422e0ac4999d8f042a5eaebe9cd","modified":1673667480948},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"43045d115f8fe95732c446aa45bf1c97609ff2a5","modified":1673667480949},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"f317d2e3886e94f5fbb8781c2e68edd19669ff58","modified":1673667480949},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"20e0e3e3eba384930c022e21511214d244b4c9e7","modified":1673667480951},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"e342b8f8e11a3a6aa5a029912c9778c25bf5d135","modified":1673667480951},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"b9e87d32da24264bda247c1526afe140c858b0ef","modified":1673667480951},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"12b265f82840f27112ca2b1be497677f20f87545","modified":1673667480952},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"716e8b0f056bf6393e6bc6969ac84598ab8e7a6f","modified":1673667480952},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"e1c29b81a32273a0dedd926cda199a71aea72624","modified":1673667480952},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"8674bd88df076a1dfe4023ed6750ded1f5b00223","modified":1673667480953},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"c5142739e01e9f25c8b32b2209af85c787bb2b42","modified":1673667480952},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"49c76bc723d3952abb613d9d68398ed7305da999","modified":1673667480953},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4b7f057dbb53efd7cbe7eac7835a793ab3cbb135","modified":1673667480953},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"9898323ee5a7ac2a5d4f633c653112280beb2643","modified":1673667480953},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"2d3e05015796a790abd9d68957a5c698c0c9f9b6","modified":1673667480953},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"25c2a7930da14f023329df20f38df2728057fb4d","modified":1673667480953},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5de34e1d8a290751641ae456c942410852d5e809","modified":1673667480954},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"0a9f0d9eb042595502d200fb8c65efb0e6c89aa9","modified":1673667480954},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"558794fced306339b98dc2b0ee7f0576802f1355","modified":1673667480954},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"dc9318992ce2eb086ebaa2fe56b325e56d24098b","modified":1673667480954},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"b69ac38b9da8c9c1b7de696fdeea7f9d7705213a","modified":1673667480954},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"25c2a7930da14f023329df20f38df2728057fb4d","modified":1673667480955},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1673667480966},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","hash":"82e34d28f8a1169b20b60101d5bb0446deba3514","modified":1673667480965},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"236a039b0900f4267de566b46f62314ad967d30f","modified":1673667480930},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"18edddb2ffb3f85a68e4367f81e06c461e07bc25","modified":1673667480930},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"6cf78a379bb656cc0abb4ab80fcae60152ce41ad","modified":1673667480931},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"f6f05f02d50f742c84ee5122016c0563a8bb2cf9","modified":1673667480931},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"97974c231b4659b8aa5e9321c4d54db5c816d0db","modified":1673667480931},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"a52f8cae599099231866298ed831fdf76c9b6717","modified":1673667480933},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"9af620eba5ccceea21a0e3bc69f6f1fa7637c2f3","modified":1673667480933},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"70b3eb9d36543ab92796ac163544e9cf51b7c1e6","modified":1673667480933},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"97dec98d0403097d66822f1c90b50b2890c84698","modified":1673667480933},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"57b9a179675f1536e017cba457b6ac575e397c4f","modified":1673667480935},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"0dfb97703a519d9438f64f9e41ab1dd37381f733","modified":1673667480936},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"93ba8172c0d2c37d738e6dbd44fcd5a2e23b92f3","modified":1673667480937},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"66fc406796b6efe6cea76550573b7a632112406a","modified":1673667480937},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"09dda2667628d1f91b2e37d8fc6df1413f961b64","modified":1673667480937},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5cc9e7394c927065c688cba5edd6e0a27587f1d8","modified":1673667480937},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"2c24829d95c742eb9e8316ebf2fbe9f2c168b59a","modified":1673667480937},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"b266d2ce5e2b117be01537889e839a69004dc0bb","modified":1673667480938},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"fcd64c23d17775b3635325f6758b648d932e79b5","modified":1673667480938},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"b87f4a06c0db893df4f756f24be182e1a4751f24","modified":1673667480938},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"d83102771df652769e51ddfd041cf5f4ca1a041d","modified":1673667480939},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"8ed7a9d5dfac592de703421b543978095129aa5b","modified":1673667480939},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"bad99f4cccb93b3cefe990a2c85124e60698d32e","modified":1673667480939},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1f6b0d3ab227697ca115e57fd61122ea7950e19d","modified":1673667480939},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"7eeb22c5696f8e0c95161dc57703973cf81c8c12","modified":1673667480939},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"b4f4bae437d4f994af93cf142494ffcd86bae46b","modified":1673667480940},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"b31c86d1a4f89837f9187bed646bda96b2cd286c","modified":1673667480940},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"300058ca12e81013e77ba01fe66ac210525768b6","modified":1673667480940},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"6d5f26646e2914474f295de8bf6dc327d4acd529","modified":1673667480940},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"7a3a56b10ab714c0e2ed240d0939deeecdcad167","modified":1673667480940},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"3d16ac0f4ccaeed868c246d4d49bde543d1f62cb","modified":1673667480941},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b8c816fba0a9b4a35fbae03ba5b1b2da96ba2687","modified":1673667480941},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"49722d555a2edb18094bb2cb3d7336dd72051b93","modified":1673667480942},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"357f825f0a649b2e28cba1481d4c9a0cb402e43a","modified":1673667480942},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"096f908c08ce553e482aadfd3e767a0145191093","modified":1673667480943},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"525242ce9e912c4adfe5134347c67dbdb9e98e3d","modified":1673667480944},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"12f7eaf6b56624cbc411528562d6bb848ff97039","modified":1673667480944},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"b11b04737a1a0fea3bd9f0081d96ee6c015358d4","modified":1673667480944},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"fa0a2ea57b7b4ce75b5d18c264af2d92ea3192f9","modified":1673667480944},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"098b4bdf49c7300490f959386d5d1185a32543f6","modified":1673667480944},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"5d540f683018745a5ed1d6f635df28ea610c1244","modified":1673667480945},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"67a1fcb33535122d41acd24f1f49cf02c89b88fa","modified":1673667480945},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"4079e616fbf36112dec0674c1e0713d1d9769068","modified":1673667480946},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"83bd737f663a8461e66985af8ddbfc0a731fc939","modified":1673667480946},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"80488259271bcfe38031f4c2e902463daba9336b","modified":1673667480946},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"c911045b2ce9a66e38d9dd30c7ed078abbc10cbf","modified":1673667480948},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"ceacfa6218f6084c71a230b086e5d2708d29927e","modified":1673667480949},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"aca7bb220fc14ef2a8f96282d2a95a96a9238d46","modified":1673667480949},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"8b7aafb911850c73074cdb6cc87abe4ac8c12e99","modified":1673667480950},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"adaf0f580fccf4158169eeaf534a18005b39a760","modified":1673667480950},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"03a5bcecc0b12231462ef6ffe432fa77ee71beff","modified":1673667480950},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"3256e39f281f06751a1c0145d9806a0e56d68170","modified":1673667480950},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"51d46fa3c7c6b691c61a2c2b0ac005c97cfbf72b","modified":1673667480950},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1673667480966},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1673667480967},{"_id":"public/baidu_urls.txt","hash":"ccb1cfec967b2af6d17ef37d34b0a08e9da814ed","modified":1673675566807},{"_id":"public/baidusitemap.xml","hash":"9568dbfe31f3db2a2e338fd5ab5c74a4e7b9e9cd","modified":1673675566807},{"_id":"public/atom.xml","hash":"3be721d70823909e5dd97acc2d15bdb453b06f92","modified":1673675566807},{"_id":"public/search.xml","hash":"aa2452d556205da78b559ab3e80867fa2880d4ac","modified":1673675566807},{"_id":"public/sitemap.xml","hash":"1878228b7dbffd352bfe5234cb3fd3e789c26920","modified":1673675566807},{"_id":"public/404.html","hash":"62ff2df41ccd25d3f64d5aec5746a4d41d11a9d9","modified":1673675566807},{"_id":"public/about/index.html","hash":"3f8cb994841308dd4d05e89d2c854291c9aae515","modified":1673675566807},{"_id":"public/tags/index.html","hash":"930dc533ed6bed1766d125bdaa4b26bcf9fd1b82","modified":1673675566807},{"_id":"public/hello-world.html","hash":"e4bcecd1d2f715bd494c8d9b5a54e5f1afb63dde","modified":1673675566807},{"_id":"public/archives/2022/08/index.html","hash":"bae219f68f7eca3154641a074ecdef96202bf1e5","modified":1673675566807},{"_id":"public/archives/2022/09/index.html","hash":"951228c8e17c36afbecc733332360b10f7362a96","modified":1673675566807},{"_id":"public/archives/2023/index.html","hash":"b04bd6380869a3467f3a58f880915376a0510b9b","modified":1673675566807},{"_id":"public/archives/2023/01/index.html","hash":"00b1ba9f997c29f9d3b2010aad93db8df07a6e9c","modified":1673675566807},{"_id":"public/tags/ajax/index.html","hash":"1d066ab5ba06f05009538c1834cf43c80974dfef","modified":1673675566807},{"_id":"public/tags/GitHub/index.html","hash":"2decd45c252128640d19e08b48e6cf217b4b4dfa","modified":1673675566807},{"_id":"public/tags/JavaScript/index.html","hash":"185cafd5b4f3321e231475ca790d993e6702bfe3","modified":1673675566807},{"_id":"public/tags/浏览器/index.html","hash":"1e024bdfbf3339b1f6e7ec7834fe9ee4dad78ee5","modified":1673675566807},{"_id":"public/tags/React/index.html","hash":"34d58d80bf8526752fb2691da82437ce9e7760be","modified":1673675566807},{"_id":"public/tags/Hook/index.html","hash":"6eedbe15b48cd9d78cecb3eae38e29c07fd75e61","modified":1673675566807},{"_id":"public/tags/菜谱/index.html","hash":"695bb6e704f56431dc5442dd35c899eec12a3288","modified":1673675566807},{"_id":"public/axios取消请求.html","hash":"3cee7abe147d6c2f0958a83c67d61c671274a02d","modified":1673675566807},{"_id":"public/手写Promise雏形.html","hash":"963e222c3d06015ba2e1005d525eb103d2aafd51","modified":1673675566807},{"_id":"public/文本下载.html","hash":"eb58d6ac17b1cb7cf6eb28f39ac8283d01fe9525","modified":1673675566807},{"_id":"public/黄豆焖猪蹄.html","hash":"96fde67689d6066a2eb36ce0bb465fa03f6da2d0","modified":1673675566807},{"_id":"public/解决React函数式闭包问题.html","hash":"57e0ff223049f724cbb6004d2de8028c676d9845","modified":1673675566807},{"_id":"public/数组扁平化.html","hash":"2721a4ed890ab374e64ff7ab933910ec4a3e05b0","modified":1673675566807},{"_id":"public/输入URL到页面展示过程.html","hash":"a4ad52dc8a702424f43ce26962e4602f2ce68a7e","modified":1673675566807},{"_id":"public/怎么结合Hexo在GitHub搭建自己的博客网站.html","hash":"2c15717e4c49d308828af08672a89d1031532a30","modified":1673675566807},{"_id":"public/archives/index.html","hash":"a94e7f0561a8f91f8b9fc9501a86112b8b0b4b6a","modified":1673675566807},{"_id":"public/archives/2022/index.html","hash":"5ce3f025cf1d985819c17d9666e81026e6f3391e","modified":1673675566807},{"_id":"public/index.html","hash":"ef23e2e347760e8e005fbeca2c7d335622477849","modified":1673675566807},{"_id":"public/CNAME","hash":"f101067dbc5a4eff76e49fbe494ade005b9550a5","modified":1673675566807},{"_id":"public/favicon.png","hash":"6814edd490b7e2f63e908783da5ca35fc22e5d48","modified":1673675566807},{"_id":"public/js/test.ts","hash":"331db4520e5e6abea9c199bd7c4348520ed0ebf7","modified":1673675566807},{"_id":"public/images/wx_code.jpg","hash":"9e2c3e0f50b48f8d0c17b71786fd3cf441af9bd5","modified":1673675566807},{"_id":"public/images/new_repository.png","hash":"6fcf83ad7f21a76d800bbb59445e29b2254e381f","modified":1673675566807},{"_id":"public/images/三次握手.webp","hash":"ceb863c72c0738c6cfd3bc589839d8db3930419c","modified":1673675566807},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1673675566807},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1673675566807},{"_id":"public/images/四次挥手.webp","hash":"b845a1d62c9d6221339eb8e9c6cc1ec6b145d5ff","modified":1673675566807},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1673675566807},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1673675566807},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1673675566807},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1673675566807},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1673675566807},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1673675566807},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1673675566807},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1673675566807},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1673675566807},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1673675566807},{"_id":"public/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1673675566807},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1673675566807},{"_id":"public/images/setting.png","hash":"6f118bdd34f368eb83466a319548de9e6dcdeb80","modified":1673675566807},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1673675566807},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1673675566807},{"_id":"public/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1673675566807},{"_id":"public/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1673675566807},{"_id":"public/js/local-search.js","hash":"2d6e1c9f24a6765cd70e2c43609afee71e70fb01","modified":1673675566807},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1673675566807},{"_id":"public/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1673675566807},{"_id":"public/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1673675566807},{"_id":"public/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1673675566807},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1673675566807},{"_id":"public/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1673675566807},{"_id":"public/css/main.css","hash":"89d1c6826bd6f9a44b898826142e34188bc8912b","modified":1673675566807},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1673675566807},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1673675566807},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1673675566807}],"Category":[],"Data":[],"Page":[{"comments":0,"title":"404 Not Found","_content":"","source":"404/index.md","raw":"---\ncomments: false\ntitle: 404 Not Found\npermalink: /404\n---\n","date":"2023-01-14T03:38:00.835Z","updated":"2023-01-14T03:38:00.835Z","path":"/404.html","layout":"page","_id":"clcvj7x3e0000kouh29uo8lv1","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":" ","date":"2022-08-25T06:59:09.000Z","comments":0,"_content":"\n","source":"about/index.md","raw":"---\ntitle: ' '\ndate: 2022-08-25 14:59:09\ncomments: false\n---\n\n","updated":"2023-01-14T03:38:00.837Z","path":"about/index.html","layout":"page","_id":"clcvj7x3k0002kouh60wl8j68","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2022-08-25T07:15:21.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2022-08-25 15:15:21\ntype: 'tags'\ncomments: false\n---\n","updated":"2023-01-14T03:38:00.841Z","path":"tags/index.html","layout":"page","_id":"clcvj7x3p0005kouh1r5caqcc","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"axios取消请求","date":"2023-01-14T03:42:06.000Z","description":" ","_content":"\n>如何取消axios请求\n```ts\n/**\n * \n * @param data { endDate，startDate }\n * @returns \n * @description: 获取首页数据\n */\nlet getHomePageInfo_cancel:Canceler | null = null\nexport function getHomePageInfo(data) {\n    if (getHomePageInfo_cancel !== null) {\n        getHomePageInfo_cancel() // 如果上次请求没结束，调用取消方法\n    }\n    return http.request<any>({\n        url: `/sys/homePage/homePageInfo`,\n        method: 'POST',\n        cancelToken: new axios.CancelToken(function (c) { getHomePageInfo_cancel = c }), // 赋值取消的方法\n        data\n    }).then(res => {\n        getHomePageInfo_cancel = null;\n        return res\n    })\n}\n```\n","source":"_posts/axios取消请求.md","raw":"---\ntitle: axios取消请求\ndate: 2023-01-14 11:42:06\ntags: ajax\ndescription: ' '\n---\n\n>如何取消axios请求\n```ts\n/**\n * \n * @param data { endDate，startDate }\n * @returns \n * @description: 获取首页数据\n */\nlet getHomePageInfo_cancel:Canceler | null = null\nexport function getHomePageInfo(data) {\n    if (getHomePageInfo_cancel !== null) {\n        getHomePageInfo_cancel() // 如果上次请求没结束，调用取消方法\n    }\n    return http.request<any>({\n        url: `/sys/homePage/homePageInfo`,\n        method: 'POST',\n        cancelToken: new axios.CancelToken(function (c) { getHomePageInfo_cancel = c }), // 赋值取消的方法\n        data\n    }).then(res => {\n        getHomePageInfo_cancel = null;\n        return res\n    })\n}\n```\n","slug":"axios取消请求","published":1,"updated":"2023-01-14T05:52:36.824Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clcvj7x3h0001kouh3zsa6xaz","content":"<blockquote>\n<p>如何取消axios请求</p>\n</blockquote>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> data &#123; endDate，startDate &#125;</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@returns</span> </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@description</span>: 获取首页数据</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">getHomePageInfo_cancel</span>:<span class=\"title class_\">Canceler</span> | <span class=\"literal\">null</span> = <span class=\"literal\">null</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">getHomePageInfo</span>(<span class=\"params\">data</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (getHomePageInfo_cancel !== <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">getHomePageInfo_cancel</span>() <span class=\"comment\">// 如果上次请求没结束，调用取消方法</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> http.<span class=\"property\">request</span>&lt;<span class=\"built_in\">any</span>&gt;(&#123;</span><br><span class=\"line\">        <span class=\"attr\">url</span>: <span class=\"string\">`/sys/homePage/homePageInfo`</span>,</span><br><span class=\"line\">        <span class=\"attr\">method</span>: <span class=\"string\">&#x27;POST&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">cancelToken</span>: <span class=\"keyword\">new</span> axios.<span class=\"title class_\">CancelToken</span>(<span class=\"keyword\">function</span> (<span class=\"params\">c</span>) &#123; getHomePageInfo_cancel = c &#125;), <span class=\"comment\">// 赋值取消的方法</span></span><br><span class=\"line\">        data</span><br><span class=\"line\">    &#125;).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">        getHomePageInfo_cancel = <span class=\"literal\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>如何取消axios请求</p>\n</blockquote>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span> data &#123; endDate，startDate &#125;</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@returns</span> </span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@description</span>: 获取首页数据</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> <span class=\"attr\">getHomePageInfo_cancel</span>:<span class=\"title class_\">Canceler</span> | <span class=\"literal\">null</span> = <span class=\"literal\">null</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">getHomePageInfo</span>(<span class=\"params\">data</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (getHomePageInfo_cancel !== <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">getHomePageInfo_cancel</span>() <span class=\"comment\">// 如果上次请求没结束，调用取消方法</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> http.<span class=\"property\">request</span>&lt;<span class=\"built_in\">any</span>&gt;(&#123;</span><br><span class=\"line\">        <span class=\"attr\">url</span>: <span class=\"string\">`/sys/homePage/homePageInfo`</span>,</span><br><span class=\"line\">        <span class=\"attr\">method</span>: <span class=\"string\">&#x27;POST&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">cancelToken</span>: <span class=\"keyword\">new</span> axios.<span class=\"title class_\">CancelToken</span>(<span class=\"keyword\">function</span> (<span class=\"params\">c</span>) &#123; getHomePageInfo_cancel = c &#125;), <span class=\"comment\">// 赋值取消的方法</span></span><br><span class=\"line\">        data</span><br><span class=\"line\">    &#125;).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> &#123;</span><br><span class=\"line\">        getHomePageInfo_cancel = <span class=\"literal\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"Hello World","date":"2022-08-16T16:00:00.000Z","_content":"\n我的第一篇blog，欢迎参观我的[GitHub](https://github.com/black0923)\n<!--more-->\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2022-08-17 00:00:00\n---\n\n我的第一篇blog，欢迎参观我的[GitHub](https://github.com/black0923)\n<!--more-->\n","slug":"hello-world","published":1,"updated":"2023-01-14T03:58:02.562Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clcvj7x3k0003kouhd2e1csd7","content":"<p>我的第一篇blog，欢迎参观我的<a href=\"https://github.com/black0923\">GitHub</a></p>\n<span id=\"more\"></span>\n","site":{"data":{}},"excerpt":"<p>我的第一篇blog，欢迎参观我的<a href=\"https://github.com/black0923\">GitHub</a></p>","more":""},{"title":"怎么结合Hexo在GitHub搭建自己的博客网站","date":"2022-08-17T06:16:08.000Z","description":" ","_content":"## 创建[GitHub Pages](https://pages.github.com/)项目\n\n### 首先你需要注册一个 GitHub 账号，并在个人主界面里选择创建一个新的 Repository 。\n\n项目命名格式：username.github.io，并设置为Public\n![new_repository](/images/new_repository.png)\n新建index.html写入内容提交代码后\n在配置中找到pages项，配置使用哪个分支代码\n![new_repository](/images/setting.png)\n打开 username.github.io 就可以看到自己的GitHub Pages了\n\n## 使用[HEXO](https://hexo.io/zh-cn/docs/)\n\n### 安装 Hexo\n\n安装 Hexo 相当简单，只需要先安装下列应用程序即可：\n·[Node.js](https://nodejs.org/en/) (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)\n·[Git](https://git-scm.com/)\n所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。\n\n```git\nnpm install -g hexo-cli\n```\n\n进阶安装和使用\n对于熟悉 npm 的进阶用户，可以仅局部安装 hexo 包。\n\n```git\nnpm install hexo\n```\n\n### 新建 Hexo项目\n\n安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。\n\n```git\nhexo init my_hexo_demo\ncd my_hexo_demo\nnpm install\n```\n\n### 运行 Hexo项目\n\n安装完依赖 使用\n\n```git\nnpm run server\n```\n\n启动服务，就可以在[本机4000端口](http://localhost:4000)查看效果\n\n## 使用Hexo编译并更新到GitHub分支\n\n根目录找到_config.yml文件，并配置\n\n```yml\n# URL\n## 在此处设置您的网站url。例如，如果您使用GitHub页面\nurl: https://black0923.github.io\n...\n# Deployment\n## Docs: https://hexo.io/docs/one-command-deployment\ndeploy:\n  type: git\n  repo: 你的GitHub代码仓\n  branch: pages分支\n\n```\n\n编译并上传到GitHub\n\n```git\nhexo clean\nhexo g\nhexo d\n```\n\n稍等待后 刷新username.github.io 就可以了\npages分支代码是hexo编译后的.deploy_git\n","source":"_posts/怎么结合Hexo在GitHub搭建自己的博客网站.md","raw":"---\ntitle: 怎么结合Hexo在GitHub搭建自己的博客网站\ndate: 2022-08-17 14:16:08\ntags: GitHub\ndescription: ' '\n---\n## 创建[GitHub Pages](https://pages.github.com/)项目\n\n### 首先你需要注册一个 GitHub 账号，并在个人主界面里选择创建一个新的 Repository 。\n\n项目命名格式：username.github.io，并设置为Public\n![new_repository](/images/new_repository.png)\n新建index.html写入内容提交代码后\n在配置中找到pages项，配置使用哪个分支代码\n![new_repository](/images/setting.png)\n打开 username.github.io 就可以看到自己的GitHub Pages了\n\n## 使用[HEXO](https://hexo.io/zh-cn/docs/)\n\n### 安装 Hexo\n\n安装 Hexo 相当简单，只需要先安装下列应用程序即可：\n·[Node.js](https://nodejs.org/en/) (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)\n·[Git](https://git-scm.com/)\n所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。\n\n```git\nnpm install -g hexo-cli\n```\n\n进阶安装和使用\n对于熟悉 npm 的进阶用户，可以仅局部安装 hexo 包。\n\n```git\nnpm install hexo\n```\n\n### 新建 Hexo项目\n\n安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。\n\n```git\nhexo init my_hexo_demo\ncd my_hexo_demo\nnpm install\n```\n\n### 运行 Hexo项目\n\n安装完依赖 使用\n\n```git\nnpm run server\n```\n\n启动服务，就可以在[本机4000端口](http://localhost:4000)查看效果\n\n## 使用Hexo编译并更新到GitHub分支\n\n根目录找到_config.yml文件，并配置\n\n```yml\n# URL\n## 在此处设置您的网站url。例如，如果您使用GitHub页面\nurl: https://black0923.github.io\n...\n# Deployment\n## Docs: https://hexo.io/docs/one-command-deployment\ndeploy:\n  type: git\n  repo: 你的GitHub代码仓\n  branch: pages分支\n\n```\n\n编译并上传到GitHub\n\n```git\nhexo clean\nhexo g\nhexo d\n```\n\n稍等待后 刷新username.github.io 就可以了\npages分支代码是hexo编译后的.deploy_git\n","slug":"怎么结合Hexo在GitHub搭建自己的博客网站","published":1,"updated":"2023-01-14T03:38:00.835Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clcvj7x3q0006kouhbshv02s1","content":"<h2 id=\"创建GitHub-Pages项目\"><a href=\"#创建GitHub-Pages项目\" class=\"headerlink\" title=\"创建GitHub Pages项目\"></a>创建<a href=\"https://pages.github.com/\">GitHub Pages</a>项目</h2><h3 id=\"首先你需要注册一个-GitHub-账号，并在个人主界面里选择创建一个新的-Repository-。\"><a href=\"#首先你需要注册一个-GitHub-账号，并在个人主界面里选择创建一个新的-Repository-。\" class=\"headerlink\" title=\"首先你需要注册一个 GitHub 账号，并在个人主界面里选择创建一个新的 Repository 。\"></a>首先你需要注册一个 GitHub 账号，并在个人主界面里选择创建一个新的 Repository 。</h3><p>项目命名格式：username.github.io，并设置为Public<br><img src=\"/images/new_repository.png\" alt=\"new_repository\"><br>新建index.html写入内容提交代码后<br>在配置中找到pages项，配置使用哪个分支代码<br><img src=\"/images/setting.png\" alt=\"new_repository\"><br>打开 username.github.io 就可以看到自己的GitHub Pages了</p>\n<h2 id=\"使用HEXO\"><a href=\"#使用HEXO\" class=\"headerlink\" title=\"使用HEXO\"></a>使用<a href=\"https://hexo.io/zh-cn/docs/\">HEXO</a></h2><h3 id=\"安装-Hexo\"><a href=\"#安装-Hexo\" class=\"headerlink\" title=\"安装 Hexo\"></a>安装 Hexo</h3><p>安装 Hexo 相当简单，只需要先安装下列应用程序即可：<br>·<a href=\"https://nodejs.org/en/\">Node.js</a> (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)<br>·<a href=\"https://git-scm.com/\">Git</a><br>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n\n<p>进阶安装和使用<br>对于熟悉 npm 的进阶用户，可以仅局部安装 hexo 包。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"新建-Hexo项目\"><a href=\"#新建-Hexo项目\" class=\"headerlink\" title=\"新建 Hexo项目\"></a>新建 Hexo项目</h3><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init my_hexo_demo</span><br><span class=\"line\">cd my_hexo_demo</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"运行-Hexo项目\"><a href=\"#运行-Hexo项目\" class=\"headerlink\" title=\"运行 Hexo项目\"></a>运行 Hexo项目</h3><p>安装完依赖 使用</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run server</span><br></pre></td></tr></table></figure>\n\n<p>启动服务，就可以在<a href=\"http://localhost:4000/\">本机4000端口</a>查看效果</p>\n<h2 id=\"使用Hexo编译并更新到GitHub分支\"><a href=\"#使用Hexo编译并更新到GitHub分支\" class=\"headerlink\" title=\"使用Hexo编译并更新到GitHub分支\"></a>使用Hexo编译并更新到GitHub分支</h2><p>根目录找到_config.yml文件，并配置</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># URL</span></span><br><span class=\"line\"><span class=\"comment\">## 在此处设置您的网站url。例如，如果您使用GitHub页面</span></span><br><span class=\"line\"><span class=\"attr\">url:</span> <span class=\"string\">https://black0923.github.io</span></span><br><span class=\"line\"><span class=\"string\">...</span></span><br><span class=\"line\"><span class=\"comment\"># Deployment</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">你的GitHub代码仓</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">pages分支</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>编译并上传到GitHub</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n\n<p>稍等待后 刷新username.github.io 就可以了<br>pages分支代码是hexo编译后的.deploy_git</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"创建GitHub-Pages项目\"><a href=\"#创建GitHub-Pages项目\" class=\"headerlink\" title=\"创建GitHub Pages项目\"></a>创建<a href=\"https://pages.github.com/\">GitHub Pages</a>项目</h2><h3 id=\"首先你需要注册一个-GitHub-账号，并在个人主界面里选择创建一个新的-Repository-。\"><a href=\"#首先你需要注册一个-GitHub-账号，并在个人主界面里选择创建一个新的-Repository-。\" class=\"headerlink\" title=\"首先你需要注册一个 GitHub 账号，并在个人主界面里选择创建一个新的 Repository 。\"></a>首先你需要注册一个 GitHub 账号，并在个人主界面里选择创建一个新的 Repository 。</h3><p>项目命名格式：username.github.io，并设置为Public<br><img src=\"/images/new_repository.png\" alt=\"new_repository\"><br>新建index.html写入内容提交代码后<br>在配置中找到pages项，配置使用哪个分支代码<br><img src=\"/images/setting.png\" alt=\"new_repository\"><br>打开 username.github.io 就可以看到自己的GitHub Pages了</p>\n<h2 id=\"使用HEXO\"><a href=\"#使用HEXO\" class=\"headerlink\" title=\"使用HEXO\"></a>使用<a href=\"https://hexo.io/zh-cn/docs/\">HEXO</a></h2><h3 id=\"安装-Hexo\"><a href=\"#安装-Hexo\" class=\"headerlink\" title=\"安装 Hexo\"></a>安装 Hexo</h3><p>安装 Hexo 相当简单，只需要先安装下列应用程序即可：<br>·<a href=\"https://nodejs.org/en/\">Node.js</a> (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)<br>·<a href=\"https://git-scm.com/\">Git</a><br>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n\n<p>进阶安装和使用<br>对于熟悉 npm 的进阶用户，可以仅局部安装 hexo 包。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"新建-Hexo项目\"><a href=\"#新建-Hexo项目\" class=\"headerlink\" title=\"新建 Hexo项目\"></a>新建 Hexo项目</h3><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init my_hexo_demo</span><br><span class=\"line\">cd my_hexo_demo</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"运行-Hexo项目\"><a href=\"#运行-Hexo项目\" class=\"headerlink\" title=\"运行 Hexo项目\"></a>运行 Hexo项目</h3><p>安装完依赖 使用</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run server</span><br></pre></td></tr></table></figure>\n\n<p>启动服务，就可以在<a href=\"http://localhost:4000/\">本机4000端口</a>查看效果</p>\n<h2 id=\"使用Hexo编译并更新到GitHub分支\"><a href=\"#使用Hexo编译并更新到GitHub分支\" class=\"headerlink\" title=\"使用Hexo编译并更新到GitHub分支\"></a>使用Hexo编译并更新到GitHub分支</h2><p>根目录找到_config.yml文件，并配置</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># URL</span></span><br><span class=\"line\"><span class=\"comment\">## 在此处设置您的网站url。例如，如果您使用GitHub页面</span></span><br><span class=\"line\"><span class=\"attr\">url:</span> <span class=\"string\">https://black0923.github.io</span></span><br><span class=\"line\"><span class=\"string\">...</span></span><br><span class=\"line\"><span class=\"comment\"># Deployment</span></span><br><span class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">你的GitHub代码仓</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">pages分支</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>编译并上传到GitHub</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n\n<p>稍等待后 刷新username.github.io 就可以了<br>pages分支代码是hexo编译后的.deploy_git</p>\n"},{"title":"手写Promise雏形","date":"2022-09-14T03:30:04.000Z","description":" ","_content":"\n* 了解Promise\n  * Promise是一个类，构造函数接收一个函数executor，默认执行\n  * executor接收两个参数：resolve, reject 执行时修改status，且其中一个执行后，不再修改status\n  * status：pending、fulfilled、rejected\n  * 原型上有then方法，待成功/失败后执行回调\n\n\n```ts\nclass Promise {\n    constructor(executor) {\n        this.status = 'pending';\n        this.res = undefined;\n        this.err = undefined;\n        this.success_callback = [];// 成功执行的回调\n        this.error_callback = [];// 失败执行的回调\n        const resolve = res => {\n            if (this.status === 'pending') {\n                this.status = 'fulfilled';\n                this.res = res;\n                this.success_callback.forEach(cb => cb instanceof Function && cb(res))\n            }\n        }\n        const reject = err => {\n            if (this.status === 'pending') {\n                this.status = 'rejected';\n                this.err = err;\n                this.error_callback.forEach(cb => cb instanceof Function && cb(err))\n            }\n        }\n\n\n        try {\n            executor(resolve, reject)\n        } catch (error) {\n            reject(error)\n        }\n    }\n    then(f1, f2) {\n        // f1处理成功，f2处理失败\n        if (this.status === 'fulfilled') {\n            f1(this.res)\n        }\n        if (this.status === 'rejected') {\n            f2(this.err)\n        }\n        // 订阅\n        if (this.status === 'pending') {\n            this.success_callback.push(f1)\n            this.error_callback.push(f2)\n        }\n    }\n}\nlet p = new Promise((resolve, reject) => {\n    setTimeout(() => {\n        resolve('success')\n        // reject('error')\n    }, 3000);\n})\np.then(\n    res => console.log('成功了：', res),\n    err => console.log('失败了：', err)\n)\n```\n","source":"_posts/手写Promise雏形.md","raw":"---\ntitle: 手写Promise雏形\ndate: 2022-09-14 11:30:04\ntags: JavaScript\ndescription: ' '\n---\n\n* 了解Promise\n  * Promise是一个类，构造函数接收一个函数executor，默认执行\n  * executor接收两个参数：resolve, reject 执行时修改status，且其中一个执行后，不再修改status\n  * status：pending、fulfilled、rejected\n  * 原型上有then方法，待成功/失败后执行回调\n\n\n```ts\nclass Promise {\n    constructor(executor) {\n        this.status = 'pending';\n        this.res = undefined;\n        this.err = undefined;\n        this.success_callback = [];// 成功执行的回调\n        this.error_callback = [];// 失败执行的回调\n        const resolve = res => {\n            if (this.status === 'pending') {\n                this.status = 'fulfilled';\n                this.res = res;\n                this.success_callback.forEach(cb => cb instanceof Function && cb(res))\n            }\n        }\n        const reject = err => {\n            if (this.status === 'pending') {\n                this.status = 'rejected';\n                this.err = err;\n                this.error_callback.forEach(cb => cb instanceof Function && cb(err))\n            }\n        }\n\n\n        try {\n            executor(resolve, reject)\n        } catch (error) {\n            reject(error)\n        }\n    }\n    then(f1, f2) {\n        // f1处理成功，f2处理失败\n        if (this.status === 'fulfilled') {\n            f1(this.res)\n        }\n        if (this.status === 'rejected') {\n            f2(this.err)\n        }\n        // 订阅\n        if (this.status === 'pending') {\n            this.success_callback.push(f1)\n            this.error_callback.push(f2)\n        }\n    }\n}\nlet p = new Promise((resolve, reject) => {\n    setTimeout(() => {\n        resolve('success')\n        // reject('error')\n    }, 3000);\n})\np.then(\n    res => console.log('成功了：', res),\n    err => console.log('失败了：', err)\n)\n```\n","slug":"手写Promise雏形","published":1,"updated":"2023-01-14T03:56:49.576Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clcvj7x3r0007kouhevqz7tdw","content":"<ul>\n<li>了解Promise<ul>\n<li>Promise是一个类，构造函数接收一个函数executor，默认执行</li>\n<li>executor接收两个参数：resolve, reject 执行时修改status，且其中一个执行后，不再修改status</li>\n<li>status：pending、fulfilled、rejected</li>\n<li>原型上有then方法，待成功/失败后执行回调</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Promise</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">constructor</span>(<span class=\"params\">executor</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">status</span> = <span class=\"string\">&#x27;pending&#x27;</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">res</span> = <span class=\"literal\">undefined</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">err</span> = <span class=\"literal\">undefined</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">success_callback</span> = [];<span class=\"comment\">// 成功执行的回调</span></span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">error_callback</span> = [];<span class=\"comment\">// 失败执行的回调</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> <span class=\"title function_\">resolve</span> = res =&gt; &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">status</span> === <span class=\"string\">&#x27;pending&#x27;</span>) &#123;</span><br><span class=\"line\">                <span class=\"variable language_\">this</span>.<span class=\"property\">status</span> = <span class=\"string\">&#x27;fulfilled&#x27;</span>;</span><br><span class=\"line\">                <span class=\"variable language_\">this</span>.<span class=\"property\">res</span> = res;</span><br><span class=\"line\">                <span class=\"variable language_\">this</span>.<span class=\"property\">success_callback</span>.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">cb</span> =&gt;</span> cb <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Function</span> &amp;&amp; <span class=\"title function_\">cb</span>(res))</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> <span class=\"title function_\">reject</span> = err =&gt; &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">status</span> === <span class=\"string\">&#x27;pending&#x27;</span>) &#123;</span><br><span class=\"line\">                <span class=\"variable language_\">this</span>.<span class=\"property\">status</span> = <span class=\"string\">&#x27;rejected&#x27;</span>;</span><br><span class=\"line\">                <span class=\"variable language_\">this</span>.<span class=\"property\">err</span> = err;</span><br><span class=\"line\">                <span class=\"variable language_\">this</span>.<span class=\"property\">error_callback</span>.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">cb</span> =&gt;</span> cb <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Function</span> &amp;&amp; <span class=\"title function_\">cb</span>(err))</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"title function_\">executor</span>(resolve, reject)</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (error) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">reject</span>(error)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">then</span>(<span class=\"params\">f1, f2</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// f1处理成功，f2处理失败</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">status</span> === <span class=\"string\">&#x27;fulfilled&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">f1</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">res</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">status</span> === <span class=\"string\">&#x27;rejected&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">f2</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">err</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 订阅</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">status</span> === <span class=\"string\">&#x27;pending&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">success_callback</span>.<span class=\"title function_\">push</span>(f1)</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">error_callback</span>.<span class=\"title function_\">push</span>(f2)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> p = <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"title function_\">resolve</span>(<span class=\"string\">&#x27;success&#x27;</span>)</span><br><span class=\"line\">        <span class=\"comment\">// reject(&#x27;error&#x27;)</span></span><br><span class=\"line\">    &#125;, <span class=\"number\">3000</span>);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">p.<span class=\"title function_\">then</span>(</span><br><span class=\"line\">    <span class=\"function\"><span class=\"params\">res</span> =&gt;</span> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;成功了：&#x27;</span>, res),</span><br><span class=\"line\">    <span class=\"function\"><span class=\"params\">err</span> =&gt;</span> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;失败了：&#x27;</span>, err)</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>了解Promise<ul>\n<li>Promise是一个类，构造函数接收一个函数executor，默认执行</li>\n<li>executor接收两个参数：resolve, reject 执行时修改status，且其中一个执行后，不再修改status</li>\n<li>status：pending、fulfilled、rejected</li>\n<li>原型上有then方法，待成功/失败后执行回调</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Promise</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">constructor</span>(<span class=\"params\">executor</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">status</span> = <span class=\"string\">&#x27;pending&#x27;</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">res</span> = <span class=\"literal\">undefined</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">err</span> = <span class=\"literal\">undefined</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">success_callback</span> = [];<span class=\"comment\">// 成功执行的回调</span></span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">error_callback</span> = [];<span class=\"comment\">// 失败执行的回调</span></span><br><span class=\"line\">        <span class=\"keyword\">const</span> <span class=\"title function_\">resolve</span> = res =&gt; &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">status</span> === <span class=\"string\">&#x27;pending&#x27;</span>) &#123;</span><br><span class=\"line\">                <span class=\"variable language_\">this</span>.<span class=\"property\">status</span> = <span class=\"string\">&#x27;fulfilled&#x27;</span>;</span><br><span class=\"line\">                <span class=\"variable language_\">this</span>.<span class=\"property\">res</span> = res;</span><br><span class=\"line\">                <span class=\"variable language_\">this</span>.<span class=\"property\">success_callback</span>.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">cb</span> =&gt;</span> cb <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Function</span> &amp;&amp; <span class=\"title function_\">cb</span>(res))</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> <span class=\"title function_\">reject</span> = err =&gt; &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">status</span> === <span class=\"string\">&#x27;pending&#x27;</span>) &#123;</span><br><span class=\"line\">                <span class=\"variable language_\">this</span>.<span class=\"property\">status</span> = <span class=\"string\">&#x27;rejected&#x27;</span>;</span><br><span class=\"line\">                <span class=\"variable language_\">this</span>.<span class=\"property\">err</span> = err;</span><br><span class=\"line\">                <span class=\"variable language_\">this</span>.<span class=\"property\">error_callback</span>.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">cb</span> =&gt;</span> cb <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Function</span> &amp;&amp; <span class=\"title function_\">cb</span>(err))</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"title function_\">executor</span>(resolve, reject)</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (error) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">reject</span>(error)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"title function_\">then</span>(<span class=\"params\">f1, f2</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// f1处理成功，f2处理失败</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">status</span> === <span class=\"string\">&#x27;fulfilled&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">f1</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">res</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">status</span> === <span class=\"string\">&#x27;rejected&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"title function_\">f2</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">err</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 订阅</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable language_\">this</span>.<span class=\"property\">status</span> === <span class=\"string\">&#x27;pending&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">success_callback</span>.<span class=\"title function_\">push</span>(f1)</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">error_callback</span>.<span class=\"title function_\">push</span>(f2)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> p = <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"title function_\">resolve</span>(<span class=\"string\">&#x27;success&#x27;</span>)</span><br><span class=\"line\">        <span class=\"comment\">// reject(&#x27;error&#x27;)</span></span><br><span class=\"line\">    &#125;, <span class=\"number\">3000</span>);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">p.<span class=\"title function_\">then</span>(</span><br><span class=\"line\">    <span class=\"function\"><span class=\"params\">res</span> =&gt;</span> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;成功了：&#x27;</span>, res),</span><br><span class=\"line\">    <span class=\"function\"><span class=\"params\">err</span> =&gt;</span> <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;失败了：&#x27;</span>, err)</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n"},{"title":"数组扁平化","date":"2022-08-30T02:09:14.000Z","description":" ","_content":"\n\n>把嵌套n层的数组，转换成一层，例如：\n [1,[2,3,[4,5]]]======>[1,2,3,4,5]\n\n## 递归实现\n\n```typescript\nconst arr = [1,[2,3,[4,5]]]\nfunction flatten(arr) {\n    let data = []\n    arr.forEach(item=>{\n        if(Array.isArray(item)){\n            data = data.concat(flatten(item))\n        }else{\n            data.push(item)\n        }\n    })\n    return data\n}\nconsole.log(flatten(arr)) //  [1, 2, 3, 4, 5]\n```\n\n## while循环\n\n```typescript\nlet arr = [1,[2,3,[4,5]]]\nwhile (arr.find(item => Array.isArray(item))) {\n    arr = [].concat(...arr)\n    // concat : 合并多个数组、单项并返回一个新的数组\n}\nconsole.log(arr) //  [1, 2, 3, 4, 5]\n```\n\n## flat\n\n```typescript\nlet arr = [1,[2,3,[4,5]]]\n\n// 默认转换嵌套层数1\nconsole.log(arr.flat()); //  [1, 2, 3, [4, 5]]\nconsole.log(arr.flat(1)); // [1, 2, 3, [4, 5]]\n\n// 指定转换的嵌套层数\nconsole.log(arr.flat(2)); //  [1, 2, 3, 4, 5]\n \n// 不管嵌套多少层\nconsole.log(arr.flat(Infinity)); //  [1, 2, 3, 4, 5]\n \n// 自动跳过空位\nconsole.log([1, [2, , 3]].flat()); //  [1, 2, 3]\n\n// 不改变原数组\nconsole.log(arr) //  [1,[2,3,[4,5]]]\n```\n\n## toString + split\n\n```typescript\nlet arr = [1,[2,3,[4,5]]]\narr = arr.toString() // '1,2,3,4,5' join方法也可以\narr = arr.split(',') //  ['1', '2', '3', '4', '5']\narr = arr.map(item=>Number(item)) //  [1, 2, 3, 4, 5]\n```\n","source":"_posts/数组扁平化.md","raw":"---\ntitle: 数组扁平化\ndate: 2022-08-30 10:09:14\ntags: JavaScript\ndescription: ' '\n---\n\n\n>把嵌套n层的数组，转换成一层，例如：\n [1,[2,3,[4,5]]]======>[1,2,3,4,5]\n\n## 递归实现\n\n```typescript\nconst arr = [1,[2,3,[4,5]]]\nfunction flatten(arr) {\n    let data = []\n    arr.forEach(item=>{\n        if(Array.isArray(item)){\n            data = data.concat(flatten(item))\n        }else{\n            data.push(item)\n        }\n    })\n    return data\n}\nconsole.log(flatten(arr)) //  [1, 2, 3, 4, 5]\n```\n\n## while循环\n\n```typescript\nlet arr = [1,[2,3,[4,5]]]\nwhile (arr.find(item => Array.isArray(item))) {\n    arr = [].concat(...arr)\n    // concat : 合并多个数组、单项并返回一个新的数组\n}\nconsole.log(arr) //  [1, 2, 3, 4, 5]\n```\n\n## flat\n\n```typescript\nlet arr = [1,[2,3,[4,5]]]\n\n// 默认转换嵌套层数1\nconsole.log(arr.flat()); //  [1, 2, 3, [4, 5]]\nconsole.log(arr.flat(1)); // [1, 2, 3, [4, 5]]\n\n// 指定转换的嵌套层数\nconsole.log(arr.flat(2)); //  [1, 2, 3, 4, 5]\n \n// 不管嵌套多少层\nconsole.log(arr.flat(Infinity)); //  [1, 2, 3, 4, 5]\n \n// 自动跳过空位\nconsole.log([1, [2, , 3]].flat()); //  [1, 2, 3]\n\n// 不改变原数组\nconsole.log(arr) //  [1,[2,3,[4,5]]]\n```\n\n## toString + split\n\n```typescript\nlet arr = [1,[2,3,[4,5]]]\narr = arr.toString() // '1,2,3,4,5' join方法也可以\narr = arr.split(',') //  ['1', '2', '3', '4', '5']\narr = arr.map(item=>Number(item)) //  [1, 2, 3, 4, 5]\n```\n","slug":"数组扁平化","published":1,"updated":"2023-01-14T03:57:47.761Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clcvj7x3t0008kouhdgr98qr1","content":"<blockquote>\n<p>把嵌套n层的数组，转换成一层，例如：<br> [1,[2,3,[4,5]]]======&gt;[1,2,3,4,5]</p>\n</blockquote>\n<h2 id=\"递归实现\"><a href=\"#递归实现\" class=\"headerlink\" title=\"递归实现\"></a>递归实现</h2><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"number\">1</span>,[<span class=\"number\">2</span>,<span class=\"number\">3</span>,[<span class=\"number\">4</span>,<span class=\"number\">5</span>]]]</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">flatten</span>(<span class=\"params\">arr</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> data = []</span><br><span class=\"line\">    arr.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">item</span>=&gt;</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(item))&#123;</span><br><span class=\"line\">            data = data.<span class=\"title function_\">concat</span>(<span class=\"title function_\">flatten</span>(item))</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            data.<span class=\"title function_\">push</span>(item)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> data</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">flatten</span>(arr)) <span class=\"comment\">//  [1, 2, 3, 4, 5]</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"while循环\"><a href=\"#while循环\" class=\"headerlink\" title=\"while循环\"></a>while循环</h2><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,[<span class=\"number\">2</span>,<span class=\"number\">3</span>,[<span class=\"number\">4</span>,<span class=\"number\">5</span>]]]</span><br><span class=\"line\"><span class=\"keyword\">while</span> (arr.<span class=\"title function_\">find</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> <span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(item))) &#123;</span><br><span class=\"line\">    arr = [].<span class=\"title function_\">concat</span>(...arr)</span><br><span class=\"line\">    <span class=\"comment\">// concat : 合并多个数组、单项并返回一个新的数组</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr) <span class=\"comment\">//  [1, 2, 3, 4, 5]</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"flat\"><a href=\"#flat\" class=\"headerlink\" title=\"flat\"></a>flat</h2><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,[<span class=\"number\">2</span>,<span class=\"number\">3</span>,[<span class=\"number\">4</span>,<span class=\"number\">5</span>]]]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 默认转换嵌套层数1</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr.<span class=\"title function_\">flat</span>()); <span class=\"comment\">//  [1, 2, 3, [4, 5]]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr.<span class=\"title function_\">flat</span>(<span class=\"number\">1</span>)); <span class=\"comment\">// [1, 2, 3, [4, 5]]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 指定转换的嵌套层数</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr.<span class=\"title function_\">flat</span>(<span class=\"number\">2</span>)); <span class=\"comment\">//  [1, 2, 3, 4, 5]</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 不管嵌套多少层</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr.<span class=\"title function_\">flat</span>(<span class=\"title class_\">Infinity</span>)); <span class=\"comment\">//  [1, 2, 3, 4, 5]</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 自动跳过空位</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>([<span class=\"number\">1</span>, [<span class=\"number\">2</span>, , <span class=\"number\">3</span>]].<span class=\"title function_\">flat</span>()); <span class=\"comment\">//  [1, 2, 3]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不改变原数组</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr) <span class=\"comment\">//  [1,[2,3,[4,5]]]</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"toString-split\"><a href=\"#toString-split\" class=\"headerlink\" title=\"toString + split\"></a>toString + split</h2><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,[<span class=\"number\">2</span>,<span class=\"number\">3</span>,[<span class=\"number\">4</span>,<span class=\"number\">5</span>]]]</span><br><span class=\"line\">arr = arr.<span class=\"title function_\">toString</span>() <span class=\"comment\">// &#x27;1,2,3,4,5&#x27; join方法也可以</span></span><br><span class=\"line\">arr = arr.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;,&#x27;</span>) <span class=\"comment\">//  [&#x27;1&#x27;, &#x27;2&#x27;, &#x27;3&#x27;, &#x27;4&#x27;, &#x27;5&#x27;]</span></span><br><span class=\"line\">arr = arr.<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">item</span>=&gt;</span><span class=\"title class_\">Number</span>(item)) <span class=\"comment\">//  [1, 2, 3, 4, 5]</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>把嵌套n层的数组，转换成一层，例如：<br> [1,[2,3,[4,5]]]======&gt;[1,2,3,4,5]</p>\n</blockquote>\n<h2 id=\"递归实现\"><a href=\"#递归实现\" class=\"headerlink\" title=\"递归实现\"></a>递归实现</h2><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"number\">1</span>,[<span class=\"number\">2</span>,<span class=\"number\">3</span>,[<span class=\"number\">4</span>,<span class=\"number\">5</span>]]]</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">flatten</span>(<span class=\"params\">arr</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> data = []</span><br><span class=\"line\">    arr.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">item</span>=&gt;</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(item))&#123;</span><br><span class=\"line\">            data = data.<span class=\"title function_\">concat</span>(<span class=\"title function_\">flatten</span>(item))</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            data.<span class=\"title function_\">push</span>(item)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> data</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title function_\">flatten</span>(arr)) <span class=\"comment\">//  [1, 2, 3, 4, 5]</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"while循环\"><a href=\"#while循环\" class=\"headerlink\" title=\"while循环\"></a>while循环</h2><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,[<span class=\"number\">2</span>,<span class=\"number\">3</span>,[<span class=\"number\">4</span>,<span class=\"number\">5</span>]]]</span><br><span class=\"line\"><span class=\"keyword\">while</span> (arr.<span class=\"title function_\">find</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> <span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(item))) &#123;</span><br><span class=\"line\">    arr = [].<span class=\"title function_\">concat</span>(...arr)</span><br><span class=\"line\">    <span class=\"comment\">// concat : 合并多个数组、单项并返回一个新的数组</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr) <span class=\"comment\">//  [1, 2, 3, 4, 5]</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"flat\"><a href=\"#flat\" class=\"headerlink\" title=\"flat\"></a>flat</h2><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,[<span class=\"number\">2</span>,<span class=\"number\">3</span>,[<span class=\"number\">4</span>,<span class=\"number\">5</span>]]]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 默认转换嵌套层数1</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr.<span class=\"title function_\">flat</span>()); <span class=\"comment\">//  [1, 2, 3, [4, 5]]</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr.<span class=\"title function_\">flat</span>(<span class=\"number\">1</span>)); <span class=\"comment\">// [1, 2, 3, [4, 5]]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 指定转换的嵌套层数</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr.<span class=\"title function_\">flat</span>(<span class=\"number\">2</span>)); <span class=\"comment\">//  [1, 2, 3, 4, 5]</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 不管嵌套多少层</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr.<span class=\"title function_\">flat</span>(<span class=\"title class_\">Infinity</span>)); <span class=\"comment\">//  [1, 2, 3, 4, 5]</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 自动跳过空位</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>([<span class=\"number\">1</span>, [<span class=\"number\">2</span>, , <span class=\"number\">3</span>]].<span class=\"title function_\">flat</span>()); <span class=\"comment\">//  [1, 2, 3]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不改变原数组</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr) <span class=\"comment\">//  [1,[2,3,[4,5]]]</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"toString-split\"><a href=\"#toString-split\" class=\"headerlink\" title=\"toString + split\"></a>toString + split</h2><figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,[<span class=\"number\">2</span>,<span class=\"number\">3</span>,[<span class=\"number\">4</span>,<span class=\"number\">5</span>]]]</span><br><span class=\"line\">arr = arr.<span class=\"title function_\">toString</span>() <span class=\"comment\">// &#x27;1,2,3,4,5&#x27; join方法也可以</span></span><br><span class=\"line\">arr = arr.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;,&#x27;</span>) <span class=\"comment\">//  [&#x27;1&#x27;, &#x27;2&#x27;, &#x27;3&#x27;, &#x27;4&#x27;, &#x27;5&#x27;]</span></span><br><span class=\"line\">arr = arr.<span class=\"title function_\">map</span>(<span class=\"function\"><span class=\"params\">item</span>=&gt;</span><span class=\"title class_\">Number</span>(item)) <span class=\"comment\">//  [1, 2, 3, 4, 5]</span></span><br></pre></td></tr></table></figure>\n"},{"title":"文本下载","date":"2022-09-05T02:34:23.000Z","description":" ","_content":"\n>如何下载一段文本\n```js\nfunction downloadByBlob(fileName, content) {\n  const blob = new Blob([content], {\n    type: 'text/plain;charset=utf-8',\n  });\n  const reader = new FileReader();\n  reader.readAsDataURL(blob);\n  reader.onload = function (e) {\n    const a = document.createElement('a');\n    a.download = fileName;\n    a.href = e.target.result;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n}\n```\n","source":"_posts/文本下载.md","raw":"---\ntitle: 文本下载\ndate: 2022-09-05 10:34:23\ntags: JavaScript\ndescription: ' '\n---\n\n>如何下载一段文本\n```js\nfunction downloadByBlob(fileName, content) {\n  const blob = new Blob([content], {\n    type: 'text/plain;charset=utf-8',\n  });\n  const reader = new FileReader();\n  reader.readAsDataURL(blob);\n  reader.onload = function (e) {\n    const a = document.createElement('a');\n    a.download = fileName;\n    a.href = e.target.result;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n}\n```\n","slug":"文本下载","published":1,"updated":"2023-01-14T03:57:54.653Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clcvj7x3u000bkouh4gxebxhm","content":"<blockquote>\n<p>如何下载一段文本</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">downloadByBlob</span>(<span class=\"params\">fileName, content</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> blob = <span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>([content], &#123;</span><br><span class=\"line\">    <span class=\"attr\">type</span>: <span class=\"string\">&#x27;text/plain;charset=utf-8&#x27;</span>,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> reader = <span class=\"keyword\">new</span> <span class=\"title class_\">FileReader</span>();</span><br><span class=\"line\">  reader.<span class=\"title function_\">readAsDataURL</span>(blob);</span><br><span class=\"line\">  reader.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span> (<span class=\"params\">e</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> a = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\">    a.<span class=\"property\">download</span> = fileName;</span><br><span class=\"line\">    a.<span class=\"property\">href</span> = e.<span class=\"property\">target</span>.<span class=\"property\">result</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"title function_\">appendChild</span>(a);</span><br><span class=\"line\">    a.<span class=\"title function_\">click</span>();</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"title function_\">removeChild</span>(a);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>如何下载一段文本</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">downloadByBlob</span>(<span class=\"params\">fileName, content</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> blob = <span class=\"keyword\">new</span> <span class=\"title class_\">Blob</span>([content], &#123;</span><br><span class=\"line\">    <span class=\"attr\">type</span>: <span class=\"string\">&#x27;text/plain;charset=utf-8&#x27;</span>,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> reader = <span class=\"keyword\">new</span> <span class=\"title class_\">FileReader</span>();</span><br><span class=\"line\">  reader.<span class=\"title function_\">readAsDataURL</span>(blob);</span><br><span class=\"line\">  reader.<span class=\"property\">onload</span> = <span class=\"keyword\">function</span> (<span class=\"params\">e</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> a = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;a&#x27;</span>);</span><br><span class=\"line\">    a.<span class=\"property\">download</span> = fileName;</span><br><span class=\"line\">    a.<span class=\"property\">href</span> = e.<span class=\"property\">target</span>.<span class=\"property\">result</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"title function_\">appendChild</span>(a);</span><br><span class=\"line\">    a.<span class=\"title function_\">click</span>();</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"title function_\">removeChild</span>(a);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"输入URL到页面展示过程","date":"2022-08-26T03:33:04.000Z","description":" ","_content":"\n## 查找缓存\n\n```text\n浏览器先查看浏览器缓存-系统缓存-路由缓存中是否有该地址页面，\n如果有则显示页面内容。如果没有则进行下一步。\n```\n\n## DNS 解析\n\n```text\n判断URL是否是一个域名，解析实现域名和ip的转换，并缓存结果\n```\n\n## 建立TCP连接\n\n![三次握手](/images/三次握手.webp)\n\n```text\n为了建立连接TCP连接，通信双方必须从对方了解如下信息： \n1、对方报文发送的开始序号。\n2、对方发送数据的缓冲区大小。\n3、能被接收的最大报文段长度MSS。\n4、被支持的TCP选项。\n在TCP协议中，通信双方将通过三次TCP报文实现对以上信息的了解，\n并在此基础上建立一个TCP连接，而通信双方的三次TCP报文段的交换过程，\n也就是通常所说的TCP连接建立实现的三次握手(Three-Way Handshake)过程。\n```\n\n## 发送HTTP请求\n\n## 服务器响应请求并返回结果\n\n## 关闭TCP连接\n\n![四次挥手](/images/四次挥手.webp)\n\n## 浏览器渲染\n\n```text\n客户端（浏览器）解析HTML内容并渲染出来\n构建DOM树：词法分析然后解析成DOM树（dom tree），是由dom元素及属性节点组成，树的根是document对象\n构建CSS规则树：生成CSS规则树（CSS Rule Tree）\n构建render树：Web浏览器将DOM和CSSOM结合，并构建出渲染树（render tree）\n布局（Layout）：计算出每个节点在屏幕中的位置\n绘制（Painting）：即遍历render树，并使用UI后端层绘制每个节点。\n```\n","source":"_posts/输入URL到页面展示过程.md","raw":"---\ntitle: 输入URL到页面展示过程\ndate: 2022-08-26 11:33:04\ntags: 浏览器\ndescription: ' '\n---\n\n## 查找缓存\n\n```text\n浏览器先查看浏览器缓存-系统缓存-路由缓存中是否有该地址页面，\n如果有则显示页面内容。如果没有则进行下一步。\n```\n\n## DNS 解析\n\n```text\n判断URL是否是一个域名，解析实现域名和ip的转换，并缓存结果\n```\n\n## 建立TCP连接\n\n![三次握手](/images/三次握手.webp)\n\n```text\n为了建立连接TCP连接，通信双方必须从对方了解如下信息： \n1、对方报文发送的开始序号。\n2、对方发送数据的缓冲区大小。\n3、能被接收的最大报文段长度MSS。\n4、被支持的TCP选项。\n在TCP协议中，通信双方将通过三次TCP报文实现对以上信息的了解，\n并在此基础上建立一个TCP连接，而通信双方的三次TCP报文段的交换过程，\n也就是通常所说的TCP连接建立实现的三次握手(Three-Way Handshake)过程。\n```\n\n## 发送HTTP请求\n\n## 服务器响应请求并返回结果\n\n## 关闭TCP连接\n\n![四次挥手](/images/四次挥手.webp)\n\n## 浏览器渲染\n\n```text\n客户端（浏览器）解析HTML内容并渲染出来\n构建DOM树：词法分析然后解析成DOM树（dom tree），是由dom元素及属性节点组成，树的根是document对象\n构建CSS规则树：生成CSS规则树（CSS Rule Tree）\n构建render树：Web浏览器将DOM和CSSOM结合，并构建出渲染树（render tree）\n布局（Layout）：计算出每个节点在屏幕中的位置\n绘制（Painting）：即遍历render树，并使用UI后端层绘制每个节点。\n```\n","slug":"输入URL到页面展示过程","published":1,"updated":"2023-01-14T03:57:41.050Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clcvj7x3v000ckouh8rhngj2a","content":"<h2 id=\"查找缓存\"><a href=\"#查找缓存\" class=\"headerlink\" title=\"查找缓存\"></a>查找缓存</h2><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">浏览器先查看浏览器缓存-系统缓存-路由缓存中是否有该地址页面，</span><br><span class=\"line\">如果有则显示页面内容。如果没有则进行下一步。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"DNS-解析\"><a href=\"#DNS-解析\" class=\"headerlink\" title=\"DNS 解析\"></a>DNS 解析</h2><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">判断URL是否是一个域名，解析实现域名和ip的转换，并缓存结果</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"建立TCP连接\"><a href=\"#建立TCP连接\" class=\"headerlink\" title=\"建立TCP连接\"></a>建立TCP连接</h2><p><img src=\"/images/%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B.webp\" alt=\"三次握手\"></p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">为了建立连接TCP连接，通信双方必须从对方了解如下信息： </span><br><span class=\"line\">1、对方报文发送的开始序号。</span><br><span class=\"line\">2、对方发送数据的缓冲区大小。</span><br><span class=\"line\">3、能被接收的最大报文段长度MSS。</span><br><span class=\"line\">4、被支持的TCP选项。</span><br><span class=\"line\">在TCP协议中，通信双方将通过三次TCP报文实现对以上信息的了解，</span><br><span class=\"line\">并在此基础上建立一个TCP连接，而通信双方的三次TCP报文段的交换过程，</span><br><span class=\"line\">也就是通常所说的TCP连接建立实现的三次握手(Three-Way Handshake)过程。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"发送HTTP请求\"><a href=\"#发送HTTP请求\" class=\"headerlink\" title=\"发送HTTP请求\"></a>发送HTTP请求</h2><h2 id=\"服务器响应请求并返回结果\"><a href=\"#服务器响应请求并返回结果\" class=\"headerlink\" title=\"服务器响应请求并返回结果\"></a>服务器响应请求并返回结果</h2><h2 id=\"关闭TCP连接\"><a href=\"#关闭TCP连接\" class=\"headerlink\" title=\"关闭TCP连接\"></a>关闭TCP连接</h2><p><img src=\"/images/%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B.webp\" alt=\"四次挥手\"></p>\n<h2 id=\"浏览器渲染\"><a href=\"#浏览器渲染\" class=\"headerlink\" title=\"浏览器渲染\"></a>浏览器渲染</h2><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">客户端（浏览器）解析HTML内容并渲染出来</span><br><span class=\"line\">构建DOM树：词法分析然后解析成DOM树（dom tree），是由dom元素及属性节点组成，树的根是document对象</span><br><span class=\"line\">构建CSS规则树：生成CSS规则树（CSS Rule Tree）</span><br><span class=\"line\">构建render树：Web浏览器将DOM和CSSOM结合，并构建出渲染树（render tree）</span><br><span class=\"line\">布局（Layout）：计算出每个节点在屏幕中的位置</span><br><span class=\"line\">绘制（Painting）：即遍历render树，并使用UI后端层绘制每个节点。</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"查找缓存\"><a href=\"#查找缓存\" class=\"headerlink\" title=\"查找缓存\"></a>查找缓存</h2><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">浏览器先查看浏览器缓存-系统缓存-路由缓存中是否有该地址页面，</span><br><span class=\"line\">如果有则显示页面内容。如果没有则进行下一步。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"DNS-解析\"><a href=\"#DNS-解析\" class=\"headerlink\" title=\"DNS 解析\"></a>DNS 解析</h2><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">判断URL是否是一个域名，解析实现域名和ip的转换，并缓存结果</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"建立TCP连接\"><a href=\"#建立TCP连接\" class=\"headerlink\" title=\"建立TCP连接\"></a>建立TCP连接</h2><p><img src=\"/images/%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B.webp\" alt=\"三次握手\"></p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">为了建立连接TCP连接，通信双方必须从对方了解如下信息： </span><br><span class=\"line\">1、对方报文发送的开始序号。</span><br><span class=\"line\">2、对方发送数据的缓冲区大小。</span><br><span class=\"line\">3、能被接收的最大报文段长度MSS。</span><br><span class=\"line\">4、被支持的TCP选项。</span><br><span class=\"line\">在TCP协议中，通信双方将通过三次TCP报文实现对以上信息的了解，</span><br><span class=\"line\">并在此基础上建立一个TCP连接，而通信双方的三次TCP报文段的交换过程，</span><br><span class=\"line\">也就是通常所说的TCP连接建立实现的三次握手(Three-Way Handshake)过程。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"发送HTTP请求\"><a href=\"#发送HTTP请求\" class=\"headerlink\" title=\"发送HTTP请求\"></a>发送HTTP请求</h2><h2 id=\"服务器响应请求并返回结果\"><a href=\"#服务器响应请求并返回结果\" class=\"headerlink\" title=\"服务器响应请求并返回结果\"></a>服务器响应请求并返回结果</h2><h2 id=\"关闭TCP连接\"><a href=\"#关闭TCP连接\" class=\"headerlink\" title=\"关闭TCP连接\"></a>关闭TCP连接</h2><p><img src=\"/images/%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B.webp\" alt=\"四次挥手\"></p>\n<h2 id=\"浏览器渲染\"><a href=\"#浏览器渲染\" class=\"headerlink\" title=\"浏览器渲染\"></a>浏览器渲染</h2><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">客户端（浏览器）解析HTML内容并渲染出来</span><br><span class=\"line\">构建DOM树：词法分析然后解析成DOM树（dom tree），是由dom元素及属性节点组成，树的根是document对象</span><br><span class=\"line\">构建CSS规则树：生成CSS规则树（CSS Rule Tree）</span><br><span class=\"line\">构建render树：Web浏览器将DOM和CSSOM结合，并构建出渲染树（render tree）</span><br><span class=\"line\">布局（Layout）：计算出每个节点在屏幕中的位置</span><br><span class=\"line\">绘制（Painting）：即遍历render树，并使用UI后端层绘制每个节点。</span><br></pre></td></tr></table></figure>\n"},{"title":"解决React函数式闭包问题","date":"2022-08-30T08:22:31.000Z","description":" ","_content":"\n```tsx\nimport React, { useState, useEffect } from 'react';\n\nexport default () => {\n  const [count, setCount] = useState(0);\n  const log = () => {\n    setTimeout(() => {\n      console.log('count:', count);\n    }, 3000);\n  };\n  return (\n    <div>\n      count: {count}\n      <br />\n      <button onClick={() => setCount((val) => val + 1)}>增加 1</button>\n      <br />\n      <button onClick={log}>log</button>\n    </div>\n  );\n};\n```\n\n## 问题\n\n```text\n当我们点击log打印，并在3s内更新count值，发现setTimeout后执行打印出的count依旧是3s前的值\n```\n\n## 使用useRef解决\n\n```tsx\nimport React, { useState, useEffect, useRef } from 'react';\n\nexport default () => {\n  const [count, setCount] = useState(0);\n  const ref = useRef();\n  ref.current = count;\n  const log = () => {\n    setTimeout(() => {\n      console.log('count:', ref.current);\n    }, 3000);\n  };\n  return (\n    <div>\n      count: {count}\n      <br />\n      <button onClick={() => setCount((val) => val + 1)}>增加 1</button>\n      <br />\n      <button onClick={log}>log</button>\n    </div>\n  );\n};\n```\n\n```text\n3s内更新count 也会在setTimeout后执行log方法时拿到当前最新的值\n```\n","source":"_posts/解决React函数式闭包问题.md","raw":"---\ntitle: 解决React函数式闭包问题\ndate: 2022-08-30 16:22:31\ntags: [React,Hook]\ndescription: ' '\n---\n\n```tsx\nimport React, { useState, useEffect } from 'react';\n\nexport default () => {\n  const [count, setCount] = useState(0);\n  const log = () => {\n    setTimeout(() => {\n      console.log('count:', count);\n    }, 3000);\n  };\n  return (\n    <div>\n      count: {count}\n      <br />\n      <button onClick={() => setCount((val) => val + 1)}>增加 1</button>\n      <br />\n      <button onClick={log}>log</button>\n    </div>\n  );\n};\n```\n\n## 问题\n\n```text\n当我们点击log打印，并在3s内更新count值，发现setTimeout后执行打印出的count依旧是3s前的值\n```\n\n## 使用useRef解决\n\n```tsx\nimport React, { useState, useEffect, useRef } from 'react';\n\nexport default () => {\n  const [count, setCount] = useState(0);\n  const ref = useRef();\n  ref.current = count;\n  const log = () => {\n    setTimeout(() => {\n      console.log('count:', ref.current);\n    }, 3000);\n  };\n  return (\n    <div>\n      count: {count}\n      <br />\n      <button onClick={() => setCount((val) => val + 1)}>增加 1</button>\n      <br />\n      <button onClick={log}>log</button>\n    </div>\n  );\n};\n```\n\n```text\n3s内更新count 也会在setTimeout后执行log方法时拿到当前最新的值\n```\n","slug":"解决React函数式闭包问题","published":1,"updated":"2023-01-14T03:38:00.836Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clcvj7x3w000ekouh6bvs8q63","content":"<figure class=\"highlight tsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span>, &#123; useState, useEffect &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> () =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> [count, setCount] = <span class=\"title function_\">useState</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">log</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;count:&#x27;</span>, count);</span><br><span class=\"line\">    &#125;, <span class=\"number\">3000</span>);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      count: &#123;count&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> setCount((val) =&gt; val + 1)&#125;&gt;增加 1<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;log&#125;</span>&gt;</span>log<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">当我们点击log打印，并在3s内更新count值，发现setTimeout后执行打印出的count依旧是3s前的值</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用useRef解决\"><a href=\"#使用useRef解决\" class=\"headerlink\" title=\"使用useRef解决\"></a>使用useRef解决</h2><figure class=\"highlight tsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span>, &#123; useState, useEffect, useRef &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> () =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> [count, setCount] = <span class=\"title function_\">useState</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> ref = <span class=\"title function_\">useRef</span>();</span><br><span class=\"line\">  ref.<span class=\"property\">current</span> = count;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">log</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;count:&#x27;</span>, ref.<span class=\"property\">current</span>);</span><br><span class=\"line\">    &#125;, <span class=\"number\">3000</span>);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      count: &#123;count&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> setCount((val) =&gt; val + 1)&#125;&gt;增加 1<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;log&#125;</span>&gt;</span>log<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3s内更新count 也会在setTimeout后执行log方法时拿到当前最新的值</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight tsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span>, &#123; useState, useEffect &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> () =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> [count, setCount] = <span class=\"title function_\">useState</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">log</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;count:&#x27;</span>, count);</span><br><span class=\"line\">    &#125;, <span class=\"number\">3000</span>);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      count: &#123;count&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> setCount((val) =&gt; val + 1)&#125;&gt;增加 1<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;log&#125;</span>&gt;</span>log<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">当我们点击log打印，并在3s内更新count值，发现setTimeout后执行打印出的count依旧是3s前的值</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用useRef解决\"><a href=\"#使用useRef解决\" class=\"headerlink\" title=\"使用useRef解决\"></a>使用useRef解决</h2><figure class=\"highlight tsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">React</span>, &#123; useState, useEffect, useRef &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;react&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> () =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> [count, setCount] = <span class=\"title function_\">useState</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> ref = <span class=\"title function_\">useRef</span>();</span><br><span class=\"line\">  ref.<span class=\"property\">current</span> = count;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> <span class=\"title function_\">log</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;count:&#x27;</span>, ref.<span class=\"property\">current</span>);</span><br><span class=\"line\">    &#125;, <span class=\"number\">3000</span>);</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      count: &#123;count&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;()</span> =&gt;</span> setCount((val) =&gt; val + 1)&#125;&gt;增加 1<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">br</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;log&#125;</span>&gt;</span>log<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3s内更新count 也会在setTimeout后执行log方法时拿到当前最新的值</span><br></pre></td></tr></table></figure>\n"},{"title":"黄豆焖猪蹄","date":"2022-09-05T02:11:23.000Z","description":" ","_content":"\n## 黄豆泡2h\n\n## 猪蹄焯水\n\n首选🐷后大腿一只\n冷水下锅，加姜，料酒，水开焯3min\n洗干净\n\n## 炒干\n\n放姜一起炒干，然后加黄豆再炒一会\n菜脯单独炒香\n\n## 高压锅40min\n\n转高压锅，加水，2勺盐1勺糖\n大火，吹气转中火，总大概40min\n","source":"_posts/黄豆焖猪蹄.md","raw":"---\ntitle: 黄豆焖猪蹄\ndate: 2022-09-05 10:11:23\ntags: 菜谱\ndescription: ' '\n---\n\n## 黄豆泡2h\n\n## 猪蹄焯水\n\n首选🐷后大腿一只\n冷水下锅，加姜，料酒，水开焯3min\n洗干净\n\n## 炒干\n\n放姜一起炒干，然后加黄豆再炒一会\n菜脯单独炒香\n\n## 高压锅40min\n\n转高压锅，加水，2勺盐1勺糖\n大火，吹气转中火，总大概40min\n","slug":"黄豆焖猪蹄","published":1,"updated":"2023-01-14T03:38:00.837Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clcvj7x3x000gkouh4v852tvb","content":"<h2 id=\"黄豆泡2h\"><a href=\"#黄豆泡2h\" class=\"headerlink\" title=\"黄豆泡2h\"></a>黄豆泡2h</h2><h2 id=\"猪蹄焯水\"><a href=\"#猪蹄焯水\" class=\"headerlink\" title=\"猪蹄焯水\"></a>猪蹄焯水</h2><p>首选🐷后大腿一只<br>冷水下锅，加姜，料酒，水开焯3min<br>洗干净</p>\n<h2 id=\"炒干\"><a href=\"#炒干\" class=\"headerlink\" title=\"炒干\"></a>炒干</h2><p>放姜一起炒干，然后加黄豆再炒一会<br>菜脯单独炒香</p>\n<h2 id=\"高压锅40min\"><a href=\"#高压锅40min\" class=\"headerlink\" title=\"高压锅40min\"></a>高压锅40min</h2><p>转高压锅，加水，2勺盐1勺糖<br>大火，吹气转中火，总大概40min</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"黄豆泡2h\"><a href=\"#黄豆泡2h\" class=\"headerlink\" title=\"黄豆泡2h\"></a>黄豆泡2h</h2><h2 id=\"猪蹄焯水\"><a href=\"#猪蹄焯水\" class=\"headerlink\" title=\"猪蹄焯水\"></a>猪蹄焯水</h2><p>首选🐷后大腿一只<br>冷水下锅，加姜，料酒，水开焯3min<br>洗干净</p>\n<h2 id=\"炒干\"><a href=\"#炒干\" class=\"headerlink\" title=\"炒干\"></a>炒干</h2><p>放姜一起炒干，然后加黄豆再炒一会<br>菜脯单独炒香</p>\n<h2 id=\"高压锅40min\"><a href=\"#高压锅40min\" class=\"headerlink\" title=\"高压锅40min\"></a>高压锅40min</h2><p>转高压锅，加水，2勺盐1勺糖<br>大火，吹气转中火，总大概40min</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"clcvj7x3h0001kouh3zsa6xaz","tag_id":"clcvj7x3m0004kouhbduw7lba","_id":"clcvj7x3u000akouhfnvtgvf7"},{"post_id":"clcvj7x3q0006kouhbshv02s1","tag_id":"clcvj7x3t0009kouh8d0n7v1r","_id":"clcvj7x3w000fkouh8cw63864"},{"post_id":"clcvj7x3r0007kouhevqz7tdw","tag_id":"clcvj7x3v000dkouh93ts06p8","_id":"clcvj7x3z000ikouh1tub0xil"},{"post_id":"clcvj7x3t0008kouhdgr98qr1","tag_id":"clcvj7x3v000dkouh93ts06p8","_id":"clcvj7x41000kkouhczi87m8t"},{"post_id":"clcvj7x3u000bkouh4gxebxhm","tag_id":"clcvj7x3v000dkouh93ts06p8","_id":"clcvj7x42000mkouhh4ldg6od"},{"post_id":"clcvj7x3v000ckouh8rhngj2a","tag_id":"clcvj7x41000lkouh32d7aw4f","_id":"clcvj7x42000okouh7j4m0rj6"},{"post_id":"clcvj7x3w000ekouh6bvs8q63","tag_id":"clcvj7x42000nkouh4izscsp7","_id":"clcvj7x43000rkouhfzi65udq"},{"post_id":"clcvj7x3w000ekouh6bvs8q63","tag_id":"clcvj7x42000pkouh12ln9c68","_id":"clcvj7x44000skouhcun6fpui"},{"post_id":"clcvj7x3x000gkouh4v852tvb","tag_id":"clcvj7x43000qkouhc7z599yb","_id":"clcvj7x44000tkouh90866yp7"}],"Tag":[{"name":"ajax","_id":"clcvj7x3m0004kouhbduw7lba"},{"name":"GitHub","_id":"clcvj7x3t0009kouh8d0n7v1r"},{"name":"JavaScript","_id":"clcvj7x3v000dkouh93ts06p8"},{"name":"浏览器","_id":"clcvj7x41000lkouh32d7aw4f"},{"name":"React","_id":"clcvj7x42000nkouh4izscsp7"},{"name":"Hook","_id":"clcvj7x42000pkouh12ln9c68"},{"name":"菜谱","_id":"clcvj7x43000qkouhc7z599yb"}]}}